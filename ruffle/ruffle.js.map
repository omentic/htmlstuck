{"version":3,"file":"ruffle.js","mappings":"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","sources":["webpack://ruffle-selfhosted/webpack/runtime/load script","webpack://ruffle-selfhosted/webpack/bootstrap","webpack://ruffle-selfhosted/webpack/runtime/define property getters","webpack://ruffle-selfhosted/webpack/runtime/ensure chunk","webpack://ruffle-selfhosted/webpack/runtime/get javascript chunk filename","webpack://ruffle-selfhosted/webpack/runtime/global","webpack://ruffle-selfhosted/webpack/runtime/harmony module decorator","webpack://ruffle-selfhosted/webpack/runtime/hasOwnProperty shorthand","webpack://ruffle-selfhosted/webpack/runtime/make namespace object","webpack://ruffle-selfhosted/webpack/runtime/publicPath","webpack://ruffle-selfhosted/webpack/runtime/jsonp chunk loading","webpack://ruffle-selfhosted/../../node_modules/wasm-feature-detect/dist/esm/index.js","webpack://ruffle-selfhosted/../core/dist/js-polyfills.js","webpack://ruffle-selfhosted/../core/dist/public-path.js","webpack://ruffle-selfhosted/../core/dist/load-ruffle.js","webpack://ruffle-selfhosted/../core/dist/flash-identifiers.js","webpack://ruffle-selfhosted/../core/dist/plugin-polyfill.js","webpack://ruffle-selfhosted/../core/dist/shadow-template.js","webpack://ruffle-selfhosted/../core/dist/register-element.js","webpack://ruffle-selfhosted/../core/dist/load-options.js","webpack://ruffle-selfhosted/../core/dist/config.js","webpack://ruffle-selfhosted/../core/dist/build-info.js","webpack://ruffle-selfhosted/../core/dist/ruffle-player.js","webpack://ruffle-selfhosted/../core/dist/polyfills.js","webpack://ruffle-selfhosted/../core/dist/swf-file-name.js","webpack://ruffle-selfhosted/../core/dist/ruffle-embed.js","webpack://ruffle-selfhosted/../core/dist/ruffle-object.js","webpack://ruffle-selfhosted/../core/dist/version.js","webpack://ruffle-selfhosted/../core/dist/version-range.js","webpack://ruffle-selfhosted/../core/dist/source-api.js","webpack://ruffle-selfhosted/../core/dist/public-api.js","webpack://ruffle-selfhosted/./js/ruffle.js"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"ruffle-selfhosted:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"core.ruffle.\" + {\"159\":\"e053d527cc6f8e4e40cc\",\"339\":\"3ad1f003b0759800acfb\"}[chunkId] + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkruffle_selfhosted\"] = self[\"webpackChunkruffle_selfhosted\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),extendedConst=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,0,1,11,9,1,0,65,1,65,2,106,11,0])),gc=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,10,2,95,1,125,0,96,0,1,107,0,3,2,1,1,10,12,1,10,0,67,0,0,0,0,251,7,0,11])),memory64=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,4,1])),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),relaxedSimd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,15,1,13,0,65,1,253,15,65,2,253,15,253,128,2,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),streamingCompilation=()=>(async()=>\"compileStreaming\"in WebAssembly)(),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));\n","/**\n * Polyfills the `Array.prototype.reduce` method.\n *\n * Production steps of ECMA-262, Edition 5, 15.4.4.21\n * Reference: https://es5.github.io/#x15.4.4.21\n * https://tc39.github.io/ecma262/#sec-array.prototype.reduce\n */\nfunction polyfillArrayPrototypeReduce() {\n    Object.defineProperty(Array.prototype, \"reduce\", {\n        value(...args) {\n            if (args.length === 0 &&\n                window.Prototype &&\n                window.Prototype.Version &&\n                window.Prototype.Version < \"1.6.1\") {\n                // Off-spec: compatibility with prototype.js\n                return this.length > 1 ? this : this[0];\n            }\n            const callback = args[0];\n            if (this === null) {\n                throw new TypeError(\"Array.prototype.reduce called on null or undefined\");\n            }\n            if (typeof callback !== \"function\") {\n                throw new TypeError(`${callback} is not a function`);\n            }\n            const o = Object(this);\n            const len = o.length >>> 0;\n            let k = 0;\n            let value;\n            if (args.length >= 2) {\n                value = args[1];\n            }\n            else {\n                while (k < len && !(k in o)) {\n                    k++;\n                }\n                if (k >= len) {\n                    throw new TypeError(\"Reduce of empty array with no initial value\");\n                }\n                value = o[k++];\n            }\n            while (k < len) {\n                if (k in o) {\n                    value = callback(value, o[k], k, o);\n                }\n                k++;\n            }\n            return value;\n        },\n    });\n}\n/**\n * Polyfills the `Window` function.\n */\nfunction polyfillWindow() {\n    if (typeof window.constructor !== \"function\" ||\n        !isNativeFunction(window.constructor)) {\n        // Don't polyfill `Window` if `window.constructor` has been overridden.\n        return;\n    }\n    // @ts-expect-error: `Function not assignable to { new (): Window; prototype: Window; }`\n    window.Window = window.constructor;\n}\n/**\n * Polyfills the `Reflect` object and members.\n *\n * This is a partial implementation, just enough to match our needs.\n */\nfunction tryPolyfillReflect() {\n    if (window.Reflect === undefined || window.Reflect === null) {\n        // @ts-expect-error: {} indeed doesn't implement Reflect's interface.\n        window.Reflect = {};\n    }\n    if (typeof Reflect.get !== \"function\") {\n        Object.defineProperty(Reflect, \"get\", {\n            value(target, key) {\n                return target[key];\n            },\n        });\n    }\n    if (typeof Reflect.set !== \"function\") {\n        Object.defineProperty(Reflect, \"set\", {\n            value(target, key, value) {\n                target[key] = value;\n            },\n        });\n    }\n    if (typeof Reflect.has !== \"function\") {\n        Object.defineProperty(Reflect, \"has\", {\n            value(target, key) {\n                // @ts-expect-error: Type 'T' is not assignable to type 'object'.\n                return key in target;\n            },\n        });\n    }\n    if (typeof Reflect.ownKeys !== \"function\") {\n        Object.defineProperty(Reflect, \"ownKeys\", {\n            value(target) {\n                return [\n                    ...Object.getOwnPropertyNames(target),\n                    ...Object.getOwnPropertySymbols(target),\n                ];\n            },\n        });\n    }\n}\n/**\n * Determines whether a function is native or not.\n *\n * @param func The function to test.\n * @returns True if the function hasn't been overridden.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFunction(func) {\n    const val = typeof Function.prototype.toString === \"function\"\n        ? Function.prototype.toString()\n        : null;\n    if (typeof val === \"string\" && val.indexOf(\"[native code]\") >= 0) {\n        return (Function.prototype.toString.call(func).indexOf(\"[native code]\") >= 0);\n    }\n    return false;\n}\n/**\n * Checks and applies the polyfills to the current window, if needed.\n */\nexport function setPolyfillsOnLoad() {\n    if (typeof Array.prototype.reduce !== \"function\" ||\n        !isNativeFunction(Array.prototype.reduce)) {\n        // Some external libraries override the `Array.prototype.reduce` method in a way\n        // that causes Webpack to crash (#1507, #1865), so we need to override it again.\n        polyfillArrayPrototypeReduce();\n    }\n    if (typeof Window !== \"function\" || !isNativeFunction(Window)) {\n        // Overriding the native `Window` function causes issues in wasm-bindgen, as a\n        // code like `window instanceof Window` will no longer work.\n        polyfillWindow();\n    }\n    // Some pages override the native `Reflect` object, which causes various issues:\n    // 1- wasm-bindgen's stdlib may crash (#3173).\n    // 2- FlashVars may be ignored (#8537).\n    tryPolyfillReflect();\n}\n","// This must be in global scope because `document.currentScript`\n// works only while the script is initially being processed.\nlet currentScriptURL = \"\";\ntry {\n    if (document.currentScript !== undefined &&\n        document.currentScript !== null &&\n        \"src\" in document.currentScript &&\n        document.currentScript.src !== \"\") {\n        let src = document.currentScript.src;\n        // CDNs allow omitting the filename. If it's omitted, append a slash to\n        // prevent the last component from being dropped.\n        if (!src.endsWith(\".js\") && !src.endsWith(\"/\")) {\n            src += \"/\";\n        }\n        currentScriptURL = new URL(\".\", src).href;\n    }\n}\ncatch (e) {\n    console.warn(\"Unable to get currentScript URL\");\n}\n/**\n * Attempt to discover the public path of the current Ruffle source. This can\n * be used to configure Webpack.\n *\n * A global public path can be specified for all sources using the RufflePlayer\n * config:\n *\n * ```js\n * window.RufflePlayer.config.publicPath = \"/dist/\";\n * ```\n *\n * If no such config is specified, then the parent path of where this script is\n * hosted is assumed, which should be the correct default in most cases.\n *\n * @param config The `window.RufflePlayer.config` object.\n * @returns The public path for the given source.\n */\nexport function publicPath(config) {\n    // Default to the directory where this script resides.\n    let path = currentScriptURL;\n    if (\"publicPath\" in config &&\n        config.publicPath !== null &&\n        config.publicPath !== undefined) {\n        path = config.publicPath;\n    }\n    // Webpack expects the paths to end with a slash.\n    if (path !== \"\" && !path.endsWith(\"/\")) {\n        path += \"/\";\n    }\n    return path;\n}\n","/**\n * Conditional ruffle loader\n */\nimport { bulkMemory, simd, saturatedFloatToInt, signExtensions, referenceTypes, } from \"wasm-feature-detect\";\nimport { setPolyfillsOnLoad } from \"./js-polyfills\";\nimport { publicPath } from \"./public-path\";\n/**\n * Load ruffle from an automatically-detected location.\n *\n * This function returns a new instance of Ruffle and downloads it every time.\n * You should not use it directly; this module will memoize the resource\n * download.\n *\n * @param config The `window.RufflePlayer.config` object.\n * @param progressCallback The callback that will be run with Ruffle's download progress.\n * @returns A ruffle constructor that may be used to create new Ruffle\n * instances.\n */\nasync function fetchRuffle(config, progressCallback) {\n    // Apply some pure JavaScript polyfills to prevent conflicts with external\n    // libraries, if needed.\n    setPolyfillsOnLoad();\n    // NOTE: Keep this list in sync with $RUSTFLAGS in the CI build config!\n    const extensionsSupported = (await Promise.all([\n        bulkMemory(),\n        simd(),\n        saturatedFloatToInt(),\n        signExtensions(),\n        referenceTypes(),\n    ])).every(Boolean);\n    if (!extensionsSupported) {\n        console.log(\"Some WebAssembly extensions are NOT available, falling back to the vanilla WebAssembly module\");\n    }\n    __webpack_public_path__ = publicPath(config);\n    // Note: The argument passed to import() has to be a simple string literal,\n    // otherwise some bundler will get confused and won't include the module?\n    const { default: init, Ruffle } = await (extensionsSupported\n        ? import(\"../dist/ruffle_web-wasm_extensions\")\n        : import(\"../dist/ruffle_web\"));\n    let response;\n    const wasmUrl = extensionsSupported\n        ? new URL(\"../dist/ruffle_web-wasm_extensions_bg.wasm\", import.meta.url)\n        : new URL(\"../dist/ruffle_web_bg.wasm\", import.meta.url);\n    const wasmResponse = await fetch(wasmUrl);\n    if (progressCallback) {\n        const contentLength = wasmResponse.headers.get(\"content-length\") || \"\";\n        let bytesLoaded = 0;\n        // Use parseInt rather than Number so the empty string is coerced to NaN instead of 0\n        const bytesTotal = parseInt(contentLength);\n        response = new Response(new ReadableStream({\n            async start(controller) {\n                var _a;\n                const reader = (_a = wasmResponse.body) === null || _a === void 0 ? void 0 : _a.getReader();\n                if (!reader) {\n                    throw \"Response had no body\";\n                }\n                progressCallback(bytesLoaded, bytesTotal);\n                for (;;) {\n                    const { done, value } = await reader.read();\n                    if (done) {\n                        break;\n                    }\n                    if (value === null || value === void 0 ? void 0 : value.byteLength) {\n                        bytesLoaded += value === null || value === void 0 ? void 0 : value.byteLength;\n                    }\n                    controller.enqueue(value);\n                    progressCallback(bytesLoaded, bytesTotal);\n                }\n                controller.close();\n            },\n        }), wasmResponse);\n    }\n    else {\n        response = wasmResponse;\n    }\n    await init(response);\n    return Ruffle;\n}\nlet lastLoaded = null;\n/**\n * Obtain an instance of `Ruffle`.\n *\n * This function returns a promise which yields `Ruffle` asynchronously.\n *\n * @param config The `window.RufflePlayer.config` object.\n * @param progressCallback The callback that will be run with Ruffle's download progress.\n * @returns A ruffle constructor that may be used to create new Ruffle\n * instances.\n */\nexport function loadRuffle(config, progressCallback) {\n    if (lastLoaded === null) {\n        lastLoaded = fetchRuffle(config, progressCallback);\n    }\n    return lastLoaded;\n}\n","export const FLASH_MIMETYPE = \"application/x-shockwave-flash\";\nexport const FUTURESPLASH_MIMETYPE = \"application/futuresplash\";\nexport const FLASH7_AND_8_MIMETYPE = \"application/x-shockwave-flash2-preview\";\nexport const FLASH_MOVIE_MIMETYPE = \"application/vnd.adobe.flash.movie\";\nexport const FLASH_ACTIVEX_CLASSID = \"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\";\n","import { FLASH_MIMETYPE, FUTURESPLASH_MIMETYPE, FLASH7_AND_8_MIMETYPE, FLASH_MOVIE_MIMETYPE, } from \"./flash-identifiers\";\n/**\n * Replacement object for `MimeTypeArray` that lets us install new fake mime\n * types.\n *\n * Unlike plugins we can at least enumerate mime types in Firefox, so we don't\n * lose data.\n *\n * We also expose a method called `install` which adds a new plugin. This is\n * used to falsify Flash detection. If the existing `navigator.mimeTypes` has an\n * `install` method, you should not use `RuffleMimeTypeArray` as some other\n * plugin emulator is already present.\n */\nclass RuffleMimeTypeArray {\n    constructor(mimeTypes) {\n        this.__mimeTypes = [];\n        this.__namedMimeTypes = {};\n        if (mimeTypes) {\n            for (let i = 0; i < mimeTypes.length; i++) {\n                this.install(mimeTypes[i]);\n            }\n        }\n    }\n    /**\n     * Install a MIME Type into the array.\n     *\n     * @param mimeType The mime type to install\n     */\n    install(mimeType) {\n        const index = this.__mimeTypes.length;\n        this.__mimeTypes.push(mimeType);\n        this.__namedMimeTypes[mimeType.type] = mimeType;\n        this[mimeType.type] = mimeType;\n        this[index] = mimeType;\n    }\n    item(index) {\n        // This behavior is done to emulate a 32-bit uint,\n        // which browsers use.\n        return this.__mimeTypes[index >>> 0];\n    }\n    namedItem(name) {\n        return this.__namedMimeTypes[name];\n    }\n    get length() {\n        return this.__mimeTypes.length;\n    }\n    [Symbol.iterator]() {\n        return this.__mimeTypes[Symbol.iterator]();\n    }\n}\n/**\n * Equivalent object to `Plugin` that allows us to falsify plugins.\n */\nclass RufflePlugin extends RuffleMimeTypeArray {\n    constructor(name, description, filename) {\n        super();\n        this.name = name;\n        this.description = description;\n        this.filename = filename;\n    }\n}\n/**\n * Replacement object for `PluginArray` that lets us install new fake plugins.\n *\n * This object needs to wrap the native plugin array, since the user might have\n * actual plugins installed. Firefox doesn't let us enumerate the array, though,\n * which has some consequences. Namely, we can't actually perfectly wrap the\n * native plugin array, at least unless there's some secret \"unresolved object\n * property name handler\" that I've never known before in JS...\n *\n * We can still wrap `namedItem` perfectly at least.\n *\n * We also expose a method called `install` which adds a new plugin. This is\n * used to falsify Flash detection. If the existing `navigator.plugins` has an\n * `install` method, you should not use `RufflePluginArray` as some other plugin\n * emulator is already present.\n */\nclass RufflePluginArray {\n    constructor(plugins) {\n        this.__plugins = [];\n        this.__namedPlugins = {};\n        for (let i = 0; i < plugins.length; i++) {\n            this.install(plugins[i]);\n        }\n    }\n    install(plugin) {\n        const index = this.__plugins.length;\n        this.__plugins.push(plugin);\n        this.__namedPlugins[plugin.name] = plugin;\n        this[plugin.name] = plugin;\n        this[index] = plugin;\n    }\n    item(index) {\n        // This behavior is done to emulate a 32-bit uint,\n        // which browsers use. Cloudflare's anti-bot\n        // checks rely on this.\n        return this.__plugins[index >>> 0];\n    }\n    namedItem(name) {\n        return this.__namedPlugins[name];\n    }\n    refresh() {\n        // Nothing to do, we just need to define the method.\n    }\n    [Symbol.iterator]() {\n        return this.__plugins[Symbol.iterator]();\n    }\n    get length() {\n        return this.__plugins.length;\n    }\n}\n/**\n * A fake plugin designed to trigger Flash detection scripts.\n */\nexport const FLASH_PLUGIN = new RufflePlugin(\"Shockwave Flash\", \"Shockwave Flash 32.0 r0\", \"ruffle.js\");\n/**\n * A fake plugin designed to allow early detection of if the Ruffle extension is in use.\n */\nexport const RUFFLE_EXTENSION = new RufflePlugin(\"Ruffle Extension\", \"Ruffle Extension\", \"ruffle.js\");\nFLASH_PLUGIN.install({\n    type: FUTURESPLASH_MIMETYPE,\n    description: \"Shockwave Flash\",\n    suffixes: \"spl\",\n    enabledPlugin: FLASH_PLUGIN,\n});\nFLASH_PLUGIN.install({\n    type: FLASH_MIMETYPE,\n    description: \"Shockwave Flash\",\n    suffixes: \"swf\",\n    enabledPlugin: FLASH_PLUGIN,\n});\nFLASH_PLUGIN.install({\n    type: FLASH7_AND_8_MIMETYPE,\n    description: \"Shockwave Flash\",\n    suffixes: \"swf\",\n    enabledPlugin: FLASH_PLUGIN,\n});\nFLASH_PLUGIN.install({\n    type: FLASH_MOVIE_MIMETYPE,\n    description: \"Shockwave Flash\",\n    suffixes: \"swf\",\n    enabledPlugin: FLASH_PLUGIN,\n});\n/**\n * Install a fake plugin such that detectors will see it in `navigator.plugins`.\n *\n * This function takes care to check if the existing implementation of\n * `navigator.plugins` already accepts fake plugin entries. If so, it will use\n * that version of the plugin array. This allows the plugin polyfill to compose\n * across multiple plugin emulators with the first emulator's polyfill winning.\n *\n * @param plugin The plugin to install\n */\nexport function installPlugin(plugin) {\n    if (!(\"install\" in navigator.plugins) || !navigator.plugins[\"install\"]) {\n        Object.defineProperty(navigator, \"plugins\", {\n            value: new RufflePluginArray(navigator.plugins),\n            writable: false,\n        });\n    }\n    const plugins = navigator.plugins;\n    plugins.install(plugin);\n    if (plugin.length > 0 &&\n        (!(\"install\" in navigator.mimeTypes) || !navigator.mimeTypes[\"install\"])) {\n        Object.defineProperty(navigator, \"mimeTypes\", {\n            value: new RuffleMimeTypeArray(navigator.mimeTypes),\n            writable: false,\n        });\n    }\n    const mimeTypes = navigator.mimeTypes;\n    for (let i = 0; i < plugin.length; i += 1) {\n        mimeTypes.install(plugin[i]);\n    }\n}\n","/**\n * The shadow template which is used to fill the actual Ruffle player element\n * on the page.\n */\nexport const ruffleShadowTemplate = document.createElement(\"template\");\nruffleShadowTemplate.innerHTML = `\n    <style>\n        :host {\n            --ruffle-blue: #37528c;\n            --ruffle-orange: #ffad33;\n\n            display: inline-block;\n            position: relative;\n            /* Default width/height; this will get overridden by user styles/attributes. */\n            width: 550px;\n            height: 400px;\n            font-family: Arial, sans-serif;\n            letter-spacing: 0.4px;\n            touch-action: none;\n            user-select: none;\n            -webkit-user-select: none;\n            -webkit-tap-highlight-color: transparent;\n            line-height: normal;\n        }\n\n        /* Ruffle's width/height CSS interferes with Safari's fullscreen CSS. */\n        /* Ensure that Safari's fullscreen mode actually fills the screen. */\n        :host(:-webkit-full-screen) {\n            display: block;\n            width: 100% !important;\n            height: 100% !important;\n        }\n\n        .hidden {\n            display: none !important;\n        }\n\n        /* All of these use the dimensions specified by the embed. */\n        #container,\n        #play_button,\n        #unmute_overlay,\n        #unmute_overlay .background,\n        #panic,\n        #splash-screen,\n        #message_overlay {\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n\n        #container {\n            overflow: hidden;\n        }\n\n        #container canvas {\n            width: 100%;\n            height: 100%;\n        }\n\n        #play_button,\n        #unmute_overlay {\n            cursor: pointer;\n            display: none;\n        }\n\n        #unmute_overlay .background {\n            background: black;\n            opacity: 0.7;\n        }\n\n        #play_button .icon,\n        #unmute_overlay .icon {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            width: 50%;\n            height: 50%;\n            max-width: 384px;\n            max-height: 384px;\n            transform: translate(-50%, -50%);\n            opacity: 0.8;\n        }\n\n        #play_button:hover .icon,\n        #unmute_overlay:hover .icon {\n            opacity: 1;\n        }\n\n        #panic {\n            font-size: 20px;\n            text-align: center;\n            /* Inverted colors from play button! */\n            background: linear-gradient(180deg, #fd3a40 0%, #fda138 100%);\n            color: white;\n            display: flex;\n            flex-flow: column;\n            justify-content: space-around;\n        }\n\n        #panic a {\n            color: var(--ruffle-blue);\n            font-weight: bold;\n        }\n\n        #panic-title {\n            font-size: xxx-large;\n            font-weight: bold;\n        }\n\n        #panic-body.details {\n            flex: 0.9;\n            margin: 0 10px;\n        }\n\n        #panic-body textarea {\n            width: 100%;\n            height: 100%;\n            resize: none;\n        }\n\n        #panic ul {\n            padding: 0;\n            display: flex;\n            list-style-type: none;\n            justify-content: space-evenly;\n        }\n\n        #message_overlay {\n            position: absolute;\n            background: var(--ruffle-blue);\n            color: var(--ruffle-orange);\n            opacity: 1;\n            z-index: 2;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            overflow: auto;\n        }\n\n        #message_overlay .message {\n            text-align: center;\n            max-height: 100%;\n            max-width: 100%;\n            padding: 5%;\n            font-size: 20px;\n        }\n\n        #message_overlay p {\n            margin: 0.5em 0;\n        }\n\n        #message_overlay .message div {\n            display: flex;\n            justify-content: center;\n            flex-wrap: wrap;\n            column-gap: 1em;\n        }\n\n        #message_overlay a, #message_overlay button {\n            cursor: pointer;\n            background: var(--ruffle-blue);\n            color: var(--ruffle-orange);\n            border: 2px solid var(--ruffle-orange);\n            font-weight: bold;\n            font-size: 1.25em;\n            border-radius: 0.6em;\n            padding: 10px;\n            text-decoration: none;\n            margin: 2% 0;\n        }\n\n        #message_overlay a:hover, #message_overlay button:hover {\n            background: #ffffff4c;\n        }\n\n        #continue-btn {\n             cursor: pointer;\n             background: var(--ruffle-blue);\n             color: var(--ruffle-orange);\n             border: 2px solid var(--ruffle-orange);\n             font-weight: bold;\n             font-size: 20px;\n             border-radius: 20px;\n             padding: 10px;\n        }\n\n        #continue-btn:hover {\n            background: #ffffff4c;\n        }\n\n        #context-menu {\n            display: none;\n            color: black;\n            background: #fafafa;\n            border: 1px solid gray;\n            box-shadow: 0px 5px 10px -5px black;\n            position: absolute;\n            font-size: 14px;\n            text-align: left;\n            list-style: none;\n            padding: 0;\n            margin: 0;\n        }\n\n        #context-menu .menu_item {\n            padding: 5px 10px;\n            cursor: pointer;\n            color: black;\n        }\n\n        #context-menu .menu_item.disabled {\n            cursor: default;\n            color: gray;\n        }\n\n        #context-menu .menu_item:not(.disabled):hover {\n            background: lightgray;\n        }\n\n        #context-menu .menu_separator hr {\n            border: none;\n            border-bottom: 1px solid lightgray;\n            margin: 2px;\n        }\n\n        #splash-screen {\n            display: flex;\n            flex-direction: column;\n            background: var(--splash-screen-background, var(--preloader-background, var(--ruffle-blue)));\n            align-items: center;\n            justify-content: center;\n        }\n\n        .loadbar {\n            width: 100%;\n            max-width: 316px;\n            max-height: 10px;\n            height: 20%;\n            background: #253559;\n        }\n\n        .loadbar-inner {\n            width: 0px;\n            max-width: 100%;\n            height: 100%;\n            background: var(--ruffle-orange);\n        }\n            \n        .logo {\n            display: var(--logo-display, block);\n            max-width: 380px;\n            max-height: 150px;\n        }\n\n        .loading-animation {\n            max-width: 28px;\n            max-height: 28px;\n            margin-bottom: 2%;\n            width: 10%;\n            aspect-ratio: 1;\n        }\n\n        .spinner {\n            stroke-dasharray: 180;\n            stroke-dashoffset: 135;\n            stroke: var(--ruffle-orange);\n            transform-origin: 50% 50%;\n            animation: rotate 1.5s linear infinite;\n        }\n\n        @keyframes rotate {\n            to {\n                transform: rotate(360deg);\n            }\n        }\n\n        #virtual-keyboard {\n            position: absolute;\n            opacity: 0;\n            top: -100px;\n            width: 1px;\n            height: 1px;\n        }\n\n        #modal-area {\n            width: 100%;\n            height: 100%;\n        }\n\n        #restore-save {\n            display: none;\n        }\n\n        .replace-save {\n            display: none;\n        }\n\n        .save-option {\n            display: inline-block;\n            padding: 3px 10px;\n            margin: 5px 2px;\n            cursor: pointer;\n            border-radius: 50px;\n            background-color: var(--ruffle-blue);\n            color: white;\n        }\n\n        #close-modal {\n            position: absolute;\n            top: 5px;\n            right: 10px;\n            cursor: pointer;\n            font-size: x-large;\n        }\n\n        .general-save-options {\n            text-align: center;\n            padding-bottom: 8px;\n            border-bottom: 2px solid #888;\n        }\n\n        #local-saves {\n            border-collapse: collapse;\n        }\n\n        #local-saves td {\n            border-bottom: 1px solid #bbb;\n            height: 30px;\n        }\n\n        #local-saves tr td:nth-child(1) {\n            padding-right: 1em;\n            word-break: break-all;\n        }\n\n        #local-saves tr:nth-child(even) {\n            background-color: #f2f2f2;\n        }\n    </style>\n    <style id=\"dynamic_styles\"></style>\n\n    <div id=\"container\">\n        <div id=\"play_button\"><div class=\"icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\" viewBox=\"0 0 250 250\" width=\"100%\" height=\"100%\"><defs><linearGradient id=\"a\" gradientUnits=\"userSpaceOnUse\" x1=\"125\" y1=\"0\" x2=\"125\" y2=\"250\" spreadMethod=\"pad\"><stop offset=\"0%\" stop-color=\"#FDA138\"/><stop offset=\"100%\" stop-color=\"#FD3A40\"/></linearGradient><g id=\"b\"><path fill=\"url(#a)\" d=\"M250 125q0-52-37-88-36-37-88-37T37 37Q0 73 0 125t37 88q36 37 88 37t88-37q37-36 37-88M87 195V55l100 70-100 70z\"/><path fill=\"#FFF\" d=\"M87 55v140l100-70L87 55z\"/></g></defs><use xlink:href=\"#b\"/></svg></div></div>\n        <div id=\"unmute_overlay\"><div class=\"background\"></div><div class=\"icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\" viewBox=\"0 0 512 584\"  width=\"100%\" height=\"100%\" scale=\"0.8\"><path fill=\"#FFF\" stroke=\"#FFF\" d=\"m457.941 256 47.029-47.029c9.372-9.373 9.372-24.568 0-33.941-9.373-9.373-24.568-9.373-33.941 0l-47.029 47.029-47.029-47.029c-9.373-9.373-24.568-9.373-33.941 0-9.372 9.373-9.372 24.568 0 33.941l47.029 47.029-47.029 47.029c-9.372 9.373-9.372 24.568 0 33.941 4.686 4.687 10.827 7.03 16.97 7.03s12.284-2.343 16.971-7.029l47.029-47.03 47.029 47.029c4.687 4.687 10.828 7.03 16.971 7.03s12.284-2.343 16.971-7.029c9.372-9.373 9.372-24.568 0-33.941z\"/><path fill=\"#FFF\" stroke=\"#FFF\" d=\"m99 160h-55c-24.301 0-44 19.699-44 44v104c0 24.301 19.699 44 44 44h55c2.761 0 5-2.239 5-5v-182c0-2.761-2.239-5-5-5z\"/><path fill=\"#FFF\" stroke=\"#FFF\" d=\"m280 56h-24c-5.269 0-10.392 1.734-14.578 4.935l-103.459 79.116c-1.237.946-1.963 2.414-1.963 3.972v223.955c0 1.557.726 3.026 1.963 3.972l103.459 79.115c4.186 3.201 9.309 4.936 14.579 4.936h23.999c13.255 0 24-10.745 24-24v-352.001c0-13.255-10.745-24-24-24z\"/><text x=\"256\" y=\"560\" text-anchor=\"middle\" font-size=\"60px\" fill=\"#FFF\" stroke=\"#FFF\">Click to unmute</text></svg></div></div>\n        <input id=\"virtual-keyboard\" type=\"text\" autocapitalize=\"off\" autocomplete=\"off\" autocorrect=\"off\">\n    </div>\n    <div class=\"hidden\" id=\"splash-screen\">\n        <svg class=\"logo\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\" viewBox=\"0 0 380 150\"><g><path fill=\"#966214\" d=\"M58.75 85.6q.75-.1 1.5-.35.85-.25 1.65-.75.55-.35 1.05-.8.5-.45.95-1 .5-.5.75-1.2-.05.05-.15.1-.1.15-.25.25l-.1.2q-.15.05-.25.1-.4 0-.8.05-.5-.25-.9-.5-.3-.1-.55-.3l-.6-.6-4.25-6.45-1.5 11.25h3.45m83.15-.2h3.45q.75-.1 1.5-.35.25-.05.45-.15.35-.15.65-.3l.5-.3q.25-.15.5-.35.45-.35.9-.75.45-.35.75-.85l.1-.1q.1-.2.2-.35.2-.3.35-.6l-.3.4-.15.15q-.5.15-1.1.1-.25 0-.4-.05-.5-.15-.8-.4-.15-.1-.25-.25-.3-.3-.55-.6l-.05-.05v-.05l-4.25-6.4-1.5 11.25m-21.15-3.95q-.3-.3-.55-.6l-.05-.05v-.05l-4.25-6.4-1.5 11.25h3.45q.75-.1 1.5-.35.85-.25 1.6-.75.75-.5 1.4-1.1.45-.35.75-.85.35-.5.65-1.05l-.45.55q-.5.15-1.1.1-.9 0-1.45-.7m59.15.3q-.75-.5-1.4-1-3.15-2.55-3.5-6.4l-1.5 11.25h21q-3.1-.25-5.7-.75-5.6-1.05-8.9-3.1m94.2 3.85h3.45q.6-.1 1.2-.3.4-.1.75-.2.35-.15.65-.3.7-.35 1.35-.8.75-.55 1.3-1.25.1-.15.25-.3-2.55-.25-3.25-1.8l-4.2-6.3-1.5 11.25m-45.3-4.85q-.5-.4-.9-.8-2.3-2.35-2.6-5.6l-1.5 11.25h21q-11.25-.95-16-4.85m97.7 4.85q-.3-.05-.6-.05-10.8-1-15.4-4.8-3.15-2.55-3.5-6.35l-1.5 11.2h21Z\"/><path fill=\"var(--ruffle-orange)\" d=\"M92.6 54.8q-1.95-1.4-4.5-1.4H60.35q-1.35 0-2.6.45-1.65.55-3.15 1.8-2.75 2.25-3.25 5.25l-1.65 12h.05v.3l5.85 1.15h-9.5q-.5.05-1 .15-.5.15-1 .35-.5.2-.95.45-.5.3-.95.7-.45.35-.85.8-.35.4-.65.85-.3.45-.5.9-.15.45-.3.95l-5.85 41.6H50.3l5-35.5 1.5-11.25 4.25 6.45.6.6q.25.2.55.3.4.25.9.5.4-.05.8-.05.1-.05.25-.1l.1-.2q.15-.1.25-.25.1-.05.15-.1l.3-1.05 1.75-12.3h11.15L75.8 82.6h16.5l2.3-16.25h-.05l.8-5.7q.4-2.45-1-4.2-.35-.4-.75-.8-.25-.25-.55-.5-.2-.2-.45-.35m16.2 18.1h.05l-.05.3 5.85 1.15H105.2q-.5.05-1 .15-.5.15-1 .35-.5.2-.95.45-.5.3-1 .65-.4.4-.8.85-.25.3-.55.65-.05.1-.15.2-.25.45-.4.9-.2.45-.3.95-.1.65-.2 1.25-.2 1.15-.4 2.25l-4.3 30.6q-.25 3 1.75 5.25 1.6 1.8 4 2.15.6.1 1.25.1h27.35q3.25 0 6-2.25.35-.35.7-.55l.3-.2q2-2 2.25-4.5l1.65-11.6q.05-.05.1-.05l1.65-11.35h.05l.7-5.2 1.5-11.25 4.25 6.4v.05l.05.05q.25.3.55.6.1.15.25.25.3.25.8.4.15.05.4.05.6.05 1.1-.1l.15-.15.3-.4.3-1.05 1.3-9.05h-.05l.7-5.05h-.05l.15-1.25h-.05l1.65-11.7h-16.25l-2.65 19.5h.05v.2l-.05.1h.05l5.8 1.15H132.7q-.5.05-1 .15-.5.15-1 .35-.15.05-.3.15-.3.1-.55.25-.05 0-.1.05-.5.3-1 .65-.4.35-.7.7-.55.7-.95 1.45-.35.65-.55 1.4-.15.7-.25 1.4v.05q-.15 1.05-.35 2.05l-1.2 8.75v.1l-2.1 14.7H111.4l2.25-15.55h.05l.7-5.2 1.5-11.25 4.25 6.4v.05l.05.05q.25.3.55.6.55.7 1.45.7.6.05 1.1-.1l.45-.55.3-1.05 1.3-9.05h-.05l.7-5.05h-.05l.15-1.25h-.05l1.65-11.7h-16.25l-2.65 19.5m106.5-41.75q-2.25-2.25-5.5-2.25h-27.75q-3 0-5.75 2.25-1.3.95-2.05 2.1-.45.6-.7 1.2-.2.5-.35 1-.1.45-.15.95l-4.15 29.95h-.05l-.7 5.2h-.05l-.2 1.35h.05l-.05.3 5.85 1.15h-9.45q-2.1.05-3.95 1.6-1.9 1.55-2.25 3.55l-.5 3.5h-.05l-5.3 38.1h16.25l5-35.5 1.5-11.25q.35 3.85 3.5 6.4.65.5 1.4 1 3.3 2.05 8.9 3.1 2.6.5 5.7.75l1.75-11.25h-12.2l.4-2.95h-.05l.7-5.05h-.05q.1-.9.3-1.9.1-.75.2-1.6.85-5.9 2.15-14.9 0-.15.05-.25l.1-.9q.2-1.55.45-3.15h11.25l-3.1 20.8h16.5l4.1-28.05q.15-1.7-.4-3.15-.5-1.1-1.35-2.1m46.65 44.15q-.5.3-1 .65-.4.4-.8.85-.35.4-.7.85-.25.45-.45.9-.15.45-.3.95l-5.85 41.6h16.25l5-35.5 1.5-11.25 4.2 6.3q.7 1.55 3.25 1.8l.05-.1q.25-.4.35-.85l.3-1.05 1.8-14.05v-.05l5.35-37.45h-16.25l-6.15 44.3 5.85 1.15h-9.45q-.5.05-1 .15-.5.15-1 .35-.5.2-.95.45m5.4-38.9q.15-1.7-.4-3.15-.5-1.1-1.35-2.1-2.25-2.25-5.5-2.25h-27.75q-2.3 0-4.45 1.35-.65.35-1.3.9-1.3.95-2.05 2.1-.45.6-.7 1.2-.4.9-.5 1.95l-4.15 29.95h-.05l-.7 5.2h-.05l-.2 1.35h.05l-.05.3 5.85 1.15h-9.45q-2.1.05-3.95 1.6-1.9 1.55-2.25 3.55l-.5 3.5h-.05l-1.2 8.75v.1l-4.1 29.25h16.25l5-35.5 1.5-11.25q.3 3.25 2.6 5.6.4.4.9.8 4.75 3.9 16 4.85l1.75-11.25h-12.2l.4-2.95h-.05l.7-5.05h-.05q.15-.9.3-1.9.1-.75.25-1.6.15-1.25.35-2.65v-.05q.95-6.7 2.35-16.5h11.25l-3.1 20.8h16.5l4.1-28.05M345 66.35h-.05l1.15-8.2q.5-3-1.75-5.25-1.25-1.25-3-1.75-1-.5-2.25-.5h-27.95q-.65 0-1.3.1-2.5.35-4.7 2.15-2.75 2.25-3.25 5.25l-1.95 14.7v.05l-.05.3 5.85 1.15h-9.45q-1.9.05-3.6 1.35-.2.1-.35.25-1.9 1.55-2.25 3.55l-4.85 34.1q-.25 3 1.75 5.25 1.25 1.4 3 1.95 1.05.3 2.25.3H320q3.25 0 6-2.25 2.75-2 3.25-5l2.75-18.5h-16.5l-1.75 11H302.5l2.1-14.75h.05l.85-6 1.5-11.2q.35 3.8 3.5 6.35 4.6 3.8 15.4 4.8.3 0 .6.05h15.75L345 66.35m-16.4-.95-1.25 8.95h-11.3l.4-2.95h-.05l.7-5.05h-.1l.15-.95h11.45Z\"/></g></svg>\n        <svg class=\"loading-animation\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 66 66\">\n            <circle class=\"spinner\" fill=\"none\" stroke-width=\"6\" stroke-linecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>\n        </svg>        \n        <div class=\"loadbar\"><div class=\"loadbar-inner\"></div></div>\n    </div>\n\n    <dialog id=\"save-manager\">\n        <div id=\"modal-area\">\n            <span id=\"close-modal\">&times;</span>\n            <div class=\"general-save-options\">\n                <span class=\"save-option\" id=\"backup-saves\">Backup all saves (download all sols)</span>\n            </div>\n            <table id=\"local-saves\"></table>\n        </div>\n    </dialog>\n    <ul id=\"context-menu\"></ul>\n`;\n","/**\n * Number of times to try defining a custom element.\n */\nconst MAX_TRIES = 999;\n/**\n * A mapping between internal element IDs and DOM element IDs.\n */\nconst privateRegistry = {};\n/**\n * Lookup a previously registered custom element.\n *\n * The returned object will have `name`, `class`, and `internal_name`\n * properties listing the external name, implementing class, and internal name\n * respectively.\n *\n * @param elementName The internal element name, previously used to\n * register the element with the private registry.\n * @returns The element data in the registry, or null if there is\n * no such element name registered.\n */\nexport function lookupElement(elementName) {\n    const data = privateRegistry[elementName];\n    if (data !== undefined) {\n        return {\n            internalName: elementName,\n            name: data.name,\n            class: data.class,\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * Register a custom element.\n *\n * This function is designed to be tolerant of naming conflicts. If\n * registration fails, we modify the name, and try again. As a result, this\n * function returns the real element name to use.\n *\n * Calling this function multiple times will *not* register multiple elements.\n * We store a private registry mapping internal element names to DOM names.\n * Thus, the proper way to use this function is to call it every time you are\n * about to work with custom element names.\n *\n * @param elementName The internal name of the element.\n * @param elementClass The class of the element.\n *\n * You must call this function with the same class every time.\n * @returns The actual element name.\n * @throws Throws an error if two different elements were registered with the\n * same internal name.\n */\nexport function registerElement(elementName, elementClass) {\n    const registration = privateRegistry[elementName];\n    if (registration !== undefined) {\n        if (registration.class !== elementClass) {\n            throw new Error(\"Internal naming conflict on \" + elementName);\n        }\n        else {\n            return registration.name;\n        }\n    }\n    let tries = 0;\n    if (window.customElements !== undefined) {\n        while (tries < MAX_TRIES) {\n            let externalName = elementName;\n            if (tries > 0) {\n                externalName = externalName + \"-\" + tries;\n            }\n            if (window.customElements.get(externalName) !== undefined) {\n                tries += 1;\n                continue;\n            }\n            else {\n                window.customElements.define(externalName, elementClass);\n            }\n            privateRegistry[elementName] = {\n                class: elementClass,\n                name: externalName,\n                internalName: elementName,\n            };\n            return externalName;\n        }\n    }\n    throw new Error(\"Failed to assign custom element \" + elementName);\n}\n","/**\n * Represents the various types of auto-play behaviours that are supported.\n */\nexport var AutoPlay;\n(function (AutoPlay) {\n    /**\n     * The player should automatically play the movie as soon as it is loaded.\n     *\n     * If the browser does not support automatic audio, the movie will begin\n     * muted.\n     */\n    AutoPlay[\"On\"] = \"on\";\n    /**\n     * The player should not attempt to automatically play the movie.\n     *\n     * This will leave it to the user or API to actually play when appropriate.\n     */\n    AutoPlay[\"Off\"] = \"off\";\n    /**\n     * The player should automatically play the movie as soon as it is deemed\n     * \"appropriate\" to do so.\n     *\n     * The exact behaviour depends on the browser, but commonly requires some\n     * form of user interaction on the page in order to allow auto playing videos\n     * with sound.\n     */\n    AutoPlay[\"Auto\"] = \"auto\";\n})(AutoPlay || (AutoPlay = {}));\n/**\n * Controls whether the content is letterboxed or pillarboxed when the\n * player's aspect ratio does not match the movie's aspect ratio.\n *\n * When letterboxed, black bars will be rendered around the exterior\n * margins of the content.\n */\nexport var Letterbox;\n(function (Letterbox) {\n    /**\n     * The content will never be letterboxed.\n     */\n    Letterbox[\"Off\"] = \"off\";\n    /**\n     * The content will only be letterboxed if the content is running fullscreen.\n     */\n    Letterbox[\"Fullscreen\"] = \"fullscreen\";\n    /**\n     * The content will always be letterboxed.\n     */\n    Letterbox[\"On\"] = \"on\";\n})(Letterbox || (Letterbox = {}));\n/**\n * When the player is muted, this controls whether or not Ruffle will show a\n * \"click to unmute\" overlay on top of the movie.\n */\nexport var UnmuteOverlay;\n(function (UnmuteOverlay) {\n    /**\n     * Show an overlay explaining that the movie is muted.\n     */\n    UnmuteOverlay[\"Visible\"] = \"visible\";\n    /**\n     * Don't show an overlay and pretend that everything is fine.\n     */\n    UnmuteOverlay[\"Hidden\"] = \"hidden\";\n})(UnmuteOverlay || (UnmuteOverlay = {}));\n/**\n * Console logging level.\n */\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"Error\"] = \"error\";\n    LogLevel[\"Warn\"] = \"warn\";\n    LogLevel[\"Info\"] = \"info\";\n    LogLevel[\"Debug\"] = \"debug\";\n    LogLevel[\"Trace\"] = \"trace\";\n})(LogLevel || (LogLevel = {}));\n/**\n * The window mode of a Ruffle player.\n */\nexport var WindowMode;\n(function (WindowMode) {\n    /*\n     * The Flash content is rendered in its own window and layering is done with the browser's\n     * default behavior.\n     *\n     * In Ruffle, this mode functions like `WindowMode::Opaque` and will layer the Flash content\n     * together with other HTML elements.\n     */\n    WindowMode[\"Window\"] = \"window\";\n    /*\n     * The Flash content is layered together with other HTML elements, and the stage color is\n     * opaque. Content can render above or below Ruffle based on CSS rendering order.\n     */\n    WindowMode[\"Opaque\"] = \"opaque\";\n    /*\n     * The Flash content is layered together with other HTML elements, and the SWF stage color is\n     * transparent. Content beneath Ruffle will be visible through transparent areas.\n     */\n    WindowMode[\"Transparent\"] = \"transparent\";\n    /*\n     * Request compositing with hardware acceleration when possible.\n     * This mode has no effect in Ruffle and will function like `WindowMode.Opaque`.\n     */\n    WindowMode[\"Direct\"] = \"direct\";\n    /*\n     * Request a direct rendering path, bypassing browser compositing when possible.\n     * This mode has no effect in Ruffle and will function like `WindowMode::Opaque`.\n     */\n    WindowMode[\"Gpu\"] = \"gpu\";\n})(WindowMode || (WindowMode = {}));\n","import { AutoPlay, UnmuteOverlay, WindowMode, Letterbox, LogLevel, } from \"./load-options\";\nexport const DEFAULT_CONFIG = {\n    allowScriptAccess: false,\n    parameters: {},\n    autoplay: AutoPlay.Auto,\n    backgroundColor: null,\n    letterbox: Letterbox.Fullscreen,\n    unmuteOverlay: UnmuteOverlay.Visible,\n    upgradeToHttps: true,\n    compatibilityRules: true,\n    warnOnUnsupportedContent: true,\n    logLevel: LogLevel.Error,\n    showSwfDownload: false,\n    contextMenu: true,\n    // Backwards-compatibility option\n    preloader: true,\n    splashScreen: true,\n    maxExecutionDuration: { secs: 15, nanos: 0 },\n    base: null,\n    menu: true,\n    salign: \"\",\n    quality: \"high\",\n    scale: \"showAll\",\n    forceScale: false,\n    wmode: WindowMode.Opaque,\n    publicPath: null,\n    polyfills: true,\n    playerVersion: null,\n};\n","/**\n * Stores build information. The string literals are replaces at compile time by `set_version.js`.\n */\nexport const buildInfo = {\n    versionNumber: \"0.1.0\",\n    versionName: \"nightly 2023-04-06\",\n    versionChannel: \"nightly\",\n    buildDate: \"2023-04-06T00:54:49.061Z\",\n    commitHash: \"6315f3865f0556cee5a03a5db60311f97adcf845\",\n};\n","import { loadRuffle } from \"./load-ruffle\";\nimport { ruffleShadowTemplate } from \"./shadow-template\";\nimport { lookupElement } from \"./register-element\";\nimport { DEFAULT_CONFIG } from \"./config\";\nimport { AutoPlay, UnmuteOverlay, WindowMode } from \"./load-options\";\nimport { swfFileName } from \"./swf-file-name\";\nimport { buildInfo } from \"./build-info\";\nimport { FLASH_MIMETYPE, FUTURESPLASH_MIMETYPE, FLASH7_AND_8_MIMETYPE, FLASH_MOVIE_MIMETYPE, } from \"./flash-identifiers\";\nconst RUFFLE_ORIGIN = \"https://ruffle.rs\";\nconst DIMENSION_REGEX = /^\\s*(\\d+(\\.\\d+)?(%)?)/;\nlet isAudioContextUnmuted = false;\nvar PanicError;\n(function (PanicError) {\n    PanicError[PanicError[\"Unknown\"] = 0] = \"Unknown\";\n    PanicError[PanicError[\"CSPConflict\"] = 1] = \"CSPConflict\";\n    PanicError[PanicError[\"FileProtocol\"] = 2] = \"FileProtocol\";\n    PanicError[PanicError[\"InvalidWasm\"] = 3] = \"InvalidWasm\";\n    PanicError[PanicError[\"JavascriptConfiguration\"] = 4] = \"JavascriptConfiguration\";\n    PanicError[PanicError[\"JavascriptConflict\"] = 5] = \"JavascriptConflict\";\n    PanicError[PanicError[\"WasmCors\"] = 6] = \"WasmCors\";\n    PanicError[PanicError[\"WasmDownload\"] = 7] = \"WasmDownload\";\n    PanicError[PanicError[\"WasmMimeType\"] = 8] = \"WasmMimeType\";\n    PanicError[PanicError[\"WasmNotFound\"] = 9] = \"WasmNotFound\";\n    PanicError[PanicError[\"WasmDisabledMicrosoftEdge\"] = 10] = \"WasmDisabledMicrosoftEdge\";\n    PanicError[PanicError[\"SwfFetchError\"] = 11] = \"SwfFetchError\";\n    PanicError[PanicError[\"SwfCors\"] = 12] = \"SwfCors\";\n})(PanicError || (PanicError = {}));\n/**\n * Converts arbitrary input to an easy to use record object.\n *\n * @param parameters Parameters to sanitize\n * @returns A sanitized map of param name to param value\n */\nfunction sanitizeParameters(parameters) {\n    if (parameters === null || parameters === undefined) {\n        return {};\n    }\n    if (!(parameters instanceof URLSearchParams)) {\n        parameters = new URLSearchParams(parameters);\n    }\n    const output = {};\n    for (const [key, value] of parameters) {\n        // Every value must be type of string\n        output[key] = value.toString();\n    }\n    return output;\n}\n/**\n * The ruffle player element that should be inserted onto the page.\n *\n * This element will represent the rendered and intractable flash movie.\n */\nclass RufflePlayer extends HTMLElement {\n    /**\n     * Indicates the readiness of the playing movie.\n     *\n     * @returns The `ReadyState` of the player.\n     */\n    get readyState() {\n        return this._readyState;\n    }\n    /**\n     * The metadata of the playing movie (such as movie width and height).\n     * These are inherent properties stored in the SWF file and are not affected by runtime changes.\n     * For example, `metadata.width` is the width of the SWF file, and not the width of the Ruffle player.\n     *\n     * @returns The metadata of the movie, or `null` if the movie metadata has not yet loaded.\n     */\n    get metadata() {\n        return this._metadata;\n    }\n    /**\n     * Constructs a new Ruffle flash player for insertion onto the page.\n     */\n    constructor() {\n        super();\n        // Allows the user to permanently disable the context menu.\n        this.contextMenuForceDisabled = false;\n        // Whether this device is a touch device.\n        // Set to true when a touch event is encountered.\n        this.isTouch = false;\n        // Whether this device sends contextmenu events.\n        // Set to true when a contextmenu event is seen.\n        this.contextMenuSupported = false;\n        this.panicked = false;\n        this._cachedDebugInfo = null;\n        this.isExtension = false;\n        this.longPressTimer = null;\n        /**\n         * Any configuration that should apply to this specific player.\n         * This will be defaulted with any global configuration.\n         */\n        this.config = {};\n        this.shadow = this.attachShadow({ mode: \"open\" });\n        this.shadow.appendChild(ruffleShadowTemplate.content.cloneNode(true));\n        this.dynamicStyles = (this.shadow.getElementById(\"dynamic_styles\"));\n        this.container = this.shadow.getElementById(\"container\");\n        this.playButton = this.shadow.getElementById(\"play_button\");\n        this.playButton.addEventListener(\"click\", () => this.play());\n        this.unmuteOverlay = this.shadow.getElementById(\"unmute_overlay\");\n        this.splashScreen = this.shadow.getElementById(\"splash-screen\");\n        this.virtualKeyboard = (this.shadow.getElementById(\"virtual-keyboard\"));\n        this.virtualKeyboard.addEventListener(\"input\", this.virtualKeyboardInput.bind(this));\n        this.saveManager = (this.shadow.getElementById(\"save-manager\"));\n        this.saveManager.addEventListener(\"click\", () => this.saveManager.close());\n        const modalArea = this.saveManager.querySelector(\"#modal-area\");\n        if (modalArea) {\n            modalArea.addEventListener(\"click\", (event) => event.stopPropagation());\n        }\n        const closeSaveManager = this.saveManager.querySelector(\"#close-modal\");\n        if (closeSaveManager) {\n            closeSaveManager.addEventListener(\"click\", () => this.saveManager.close());\n        }\n        const backupSaves = this.saveManager.querySelector(\"#backup-saves\");\n        if (backupSaves) {\n            backupSaves.addEventListener(\"click\", this.backupSaves.bind(this));\n        }\n        this.contextMenuElement = this.shadow.getElementById(\"context-menu\");\n        window.addEventListener(\"pointerdown\", this.pointerDown.bind(this));\n        this.addEventListener(\"contextmenu\", this.showContextMenu.bind(this));\n        this.container.addEventListener(\"pointerdown\", this.startLongPressTimer.bind(this));\n        this.container.addEventListener(\"pointerup\", this.checkLongPress.bind(this));\n        this.container.addEventListener(\"pointercancel\", this.clearLongPressTimer.bind(this));\n        this.addEventListener(\"fullscreenchange\", this.fullScreenChange.bind(this));\n        this.addEventListener(\"webkitfullscreenchange\", this.fullScreenChange.bind(this));\n        this.instance = null;\n        this.onFSCommand = null;\n        this._readyState = ReadyState.HaveNothing;\n        this._metadata = null;\n        this.lastActivePlayingState = false;\n        this.setupPauseOnTabHidden();\n    }\n    /**\n     * Setup event listener to detect when tab is not active to pause instance playback.\n     * this.instance.play() is called when the tab becomes visible only if the\n     * the instance was not paused before tab became hidden.\n     *\n     * See: https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API\n     * @ignore\n     * @internal\n     */\n    setupPauseOnTabHidden() {\n        document.addEventListener(\"visibilitychange\", () => {\n            if (!this.instance) {\n                return;\n            }\n            // Tab just changed to be inactive. Record whether instance was playing.\n            if (document.hidden) {\n                this.lastActivePlayingState = this.instance.is_playing();\n                this.instance.pause();\n            }\n            // Play only if instance was playing originally.\n            if (!document.hidden && this.lastActivePlayingState === true) {\n                this.instance.play();\n            }\n        }, false);\n    }\n    /**\n     * @ignore\n     * @internal\n     */\n    connectedCallback() {\n        this.updateStyles();\n    }\n    /**\n     * @ignore\n     * @internal\n     */\n    static get observedAttributes() {\n        return [\"width\", \"height\"];\n    }\n    /**\n     * @ignore\n     * @internal\n     */\n    attributeChangedCallback(name, _oldValue, _newValue) {\n        if (name === \"width\" || name === \"height\") {\n            this.updateStyles();\n        }\n    }\n    /**\n     * @ignore\n     * @internal\n     */\n    disconnectedCallback() {\n        this.destroy();\n    }\n    /**\n     * Updates the internal shadow DOM to reflect any set attributes from\n     * this element.\n     *\n     * @protected\n     */\n    updateStyles() {\n        if (this.dynamicStyles.sheet) {\n            if (this.dynamicStyles.sheet.rules) {\n                for (let i = 0; i < this.dynamicStyles.sheet.rules.length; i++) {\n                    this.dynamicStyles.sheet.deleteRule(i);\n                }\n            }\n            const widthAttr = this.attributes.getNamedItem(\"width\");\n            if (widthAttr !== undefined && widthAttr !== null) {\n                const width = RufflePlayer.htmlDimensionToCssDimension(widthAttr.value);\n                if (width !== null) {\n                    this.dynamicStyles.sheet.insertRule(`:host { width: ${width}; }`);\n                }\n            }\n            const heightAttr = this.attributes.getNamedItem(\"height\");\n            if (heightAttr !== undefined && heightAttr !== null) {\n                const height = RufflePlayer.htmlDimensionToCssDimension(heightAttr.value);\n                if (height !== null) {\n                    this.dynamicStyles.sheet.insertRule(`:host { height: ${height}; }`);\n                }\n            }\n        }\n    }\n    /**\n     * Determine if this element is the fallback content of another Ruffle\n     * player.\n     *\n     * This heuristic assumes Ruffle objects will never use their fallback\n     * content. If this changes, then this code also needs to change.\n     *\n     * @private\n     */\n    isUnusedFallbackObject() {\n        const element = lookupElement(\"ruffle-object\");\n        if (element !== null) {\n            let parent = this.parentNode;\n            while (parent !== document && parent !== null) {\n                if (parent.nodeName === element.name) {\n                    return true;\n                }\n                parent = parent.parentNode;\n            }\n        }\n        return false;\n    }\n    /**\n     * Ensure a fresh Ruffle instance is ready on this player before continuing.\n     *\n     * @throws Any exceptions generated by loading Ruffle Core will be logged\n     * and passed on.\n     *\n     * @private\n     */\n    async ensureFreshInstance() {\n        var _a;\n        this.destroy();\n        if (this.loadedConfig &&\n            this.loadedConfig.splashScreen !== false &&\n            this.loadedConfig.preloader !== false) {\n            this.showSplashScreen();\n        }\n        if (this.loadedConfig && this.loadedConfig.preloader === false) {\n            console.warn(\"The configuration option preloader has been replaced with splashScreen. If you own this website, please update the configuration.\");\n        }\n        const ruffleConstructor = await loadRuffle(this.loadedConfig || {}, this.onRuffleDownloadProgress.bind(this)).catch((e) => {\n            console.error(`Serious error loading Ruffle: ${e}`);\n            // Serious duck typing. In error conditions, let's not make assumptions.\n            if (window.location.protocol === \"file:\") {\n                e.ruffleIndexError = PanicError.FileProtocol;\n            }\n            else {\n                e.ruffleIndexError = PanicError.WasmNotFound;\n                const message = String(e.message).toLowerCase();\n                if (message.includes(\"mime\")) {\n                    e.ruffleIndexError = PanicError.WasmMimeType;\n                }\n                else if (message.includes(\"networkerror\") ||\n                    message.includes(\"failed to fetch\")) {\n                    e.ruffleIndexError = PanicError.WasmCors;\n                }\n                else if (message.includes(\"disallowed by embedder\")) {\n                    e.ruffleIndexError = PanicError.CSPConflict;\n                }\n                else if (e.name === \"CompileError\") {\n                    e.ruffleIndexError = PanicError.InvalidWasm;\n                }\n                else if (message.includes(\"could not download wasm module\") &&\n                    e.name === \"TypeError\") {\n                    e.ruffleIndexError = PanicError.WasmDownload;\n                }\n                else if (e.name === \"TypeError\") {\n                    e.ruffleIndexError = PanicError.JavascriptConflict;\n                }\n                else if (navigator.userAgent.includes(\"Edg\") &&\n                    message.includes(\"webassembly is not defined\")) {\n                    // Microsoft Edge detection.\n                    e.ruffleIndexError = PanicError.WasmDisabledMicrosoftEdge;\n                }\n            }\n            this.panic(e);\n            throw e;\n        });\n        this.instance = await new ruffleConstructor(this.container, this, this.loadedConfig);\n        this._cachedDebugInfo = this.instance.renderer_debug_info();\n        console.log(\"New Ruffle instance created (WebAssembly extensions: \" +\n            (ruffleConstructor.is_wasm_simd_used() ? \"ON\" : \"OFF\") +\n            \")\");\n        // In Firefox, AudioContext.state is always \"suspended\" when the object has just been created.\n        // It may change by itself to \"running\" some milliseconds later. So we need to wait a little\n        // bit before checking if autoplay is supported and applying the instance config.\n        if (this.audioState() !== \"running\") {\n            this.container.style.visibility = \"hidden\";\n            await new Promise((resolve) => {\n                window.setTimeout(() => {\n                    resolve();\n                }, 200);\n            });\n            this.container.style.visibility = \"\";\n        }\n        this.unmuteAudioContext();\n        // On Android, the virtual keyboard needs to be dismissed as otherwise it re-focuses when clicking elsewhere\n        if (navigator.userAgent.toLowerCase().includes(\"android\")) {\n            this.container.addEventListener(\"click\", () => this.virtualKeyboard.blur());\n        }\n        // Treat invalid values as `AutoPlay.Auto`.\n        if (!this.loadedConfig ||\n            this.loadedConfig.autoplay === AutoPlay.On ||\n            (this.loadedConfig.autoplay !== AutoPlay.Off &&\n                this.audioState() === \"running\")) {\n            this.play();\n            if (this.audioState() !== \"running\") {\n                // Treat invalid values as `UnmuteOverlay.Visible`.\n                if (!this.loadedConfig ||\n                    this.loadedConfig.unmuteOverlay !== UnmuteOverlay.Hidden) {\n                    this.unmuteOverlay.style.display = \"block\";\n                }\n                this.container.addEventListener(\"click\", this.unmuteOverlayClicked.bind(this), {\n                    once: true,\n                });\n                const audioContext = (_a = this.instance) === null || _a === void 0 ? void 0 : _a.audio_context();\n                if (audioContext) {\n                    audioContext.onstatechange = () => {\n                        if (audioContext.state === \"running\") {\n                            this.unmuteOverlayClicked();\n                        }\n                        audioContext.onstatechange = null;\n                    };\n                }\n            }\n        }\n        else {\n            this.playButton.style.display = \"block\";\n        }\n    }\n    /**\n     * Uploads the splash screen progress bar.\n     *\n     * @param bytesLoaded The size of the Ruffle WebAssembly file downloaded so far.\n     * @param bytesTotal The total size of the Ruffle WebAssembly file.\n     */\n    onRuffleDownloadProgress(bytesLoaded, bytesTotal) {\n        const loadBar = (this.splashScreen.querySelector(\".loadbar-inner\"));\n        const outerLoadbar = (this.splashScreen.querySelector(\".loadbar\"));\n        if (Number.isNaN(bytesTotal)) {\n            if (outerLoadbar) {\n                outerLoadbar.style.display = \"none\";\n            }\n        }\n        else {\n            loadBar.style.width = `${100.0 * (bytesLoaded / bytesTotal)}%`;\n        }\n    }\n    /**\n     * Destroys the currently running instance of Ruffle.\n     */\n    destroy() {\n        if (this.instance) {\n            this.instance.destroy();\n            this.instance = null;\n            this._metadata = null;\n            this._readyState = ReadyState.HaveNothing;\n            console.log(\"Ruffle instance destroyed.\");\n        }\n    }\n    checkOptions(options) {\n        if (typeof options === \"string\") {\n            return { url: options };\n        }\n        const check = (condition, message) => {\n            if (!condition) {\n                const error = new TypeError(message);\n                error.ruffleIndexError = PanicError.JavascriptConfiguration;\n                this.panic(error);\n                throw error;\n            }\n        };\n        check(options !== null && typeof options === \"object\", \"Argument 0 must be a string or object\");\n        check(\"url\" in options || \"data\" in options, \"Argument 0 must contain a `url` or `data` key\");\n        check(!(\"url\" in options) || typeof options.url === \"string\", \"`url` must be a string\");\n        return options;\n    }\n    /**\n     * Gets the configuration set by the Ruffle extension\n     *\n     * @returns The configuration set by the Ruffle extension\n     */\n    getExtensionConfig() {\n        var _a;\n        return window.RufflePlayer &&\n            window.RufflePlayer.conflict &&\n            (window.RufflePlayer.conflict[\"newestName\"] === \"extension\" ||\n                window.RufflePlayer[\"newestName\"] === \"extension\")\n            ? (_a = window.RufflePlayer) === null || _a === void 0 ? void 0 : _a.conflict[\"config\"]\n            : {};\n    }\n    /**\n     * Loads a specified movie into this player.\n     *\n     * This will replace any existing movie that may be playing.\n     *\n     * @param options One of the following:\n     * - A URL, passed as a string, which will load a URL with default options.\n     * - A [[URLLoadOptions]] object, to load a URL with options.\n     * - A [[DataLoadOptions]] object, to load data with options.\n     *\n     * The options will be defaulted by the [[config]] field, which itself\n     * is defaulted by a global `window.RufflePlayer.config`.\n     */\n    async load(options) {\n        var _a, _b;\n        options = this.checkOptions(options);\n        if (!this.isConnected || this.isUnusedFallbackObject()) {\n            console.warn(\"Ignoring attempt to play a disconnected or suspended Ruffle element\");\n            return;\n        }\n        if (isFallbackElement(this)) {\n            // Silently fail on attempt to play a Ruffle element inside a specific node.\n            return;\n        }\n        try {\n            const extensionConfig = this.getExtensionConfig();\n            this.loadedConfig = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, DEFAULT_CONFIG), extensionConfig), ((_b = (_a = window.RufflePlayer) === null || _a === void 0 ? void 0 : _a.config) !== null && _b !== void 0 ? _b : {})), this.config), options);\n            // `allowScriptAccess` can only be set in `options`.\n            this.loadedConfig.allowScriptAccess =\n                options.allowScriptAccess === true;\n            // Pre-emptively set background color of container while Ruffle/SWF loads.\n            if (this.loadedConfig.backgroundColor &&\n                this.loadedConfig.wmode !== WindowMode.Transparent) {\n                this.container.style.backgroundColor =\n                    this.loadedConfig.backgroundColor;\n            }\n            await this.ensureFreshInstance();\n            if (\"url\" in options) {\n                console.log(`Loading SWF file ${options.url}`);\n                this.swfUrl = new URL(options.url, document.baseURI);\n                const parameters = Object.assign(Object.assign({}, sanitizeParameters(options.url.substring(options.url.indexOf(\"?\")))), sanitizeParameters(options.parameters));\n                this.instance.stream_from(this.swfUrl.href, parameters);\n            }\n            else if (\"data\" in options) {\n                console.log(\"Loading SWF data\");\n                this.instance.load_data(new Uint8Array(options.data), sanitizeParameters(options.parameters), options.swfFileName || \"movie.swf\");\n            }\n        }\n        catch (e) {\n            console.error(`Serious error occurred loading SWF file: ${e}`);\n            const err = new Error(e);\n            if (err.message.includes(\"Error parsing config\")) {\n                err.ruffleIndexError = PanicError.JavascriptConfiguration;\n            }\n            this.panic(err);\n            throw err;\n        }\n    }\n    /**\n     * Plays or resumes the movie.\n     */\n    play() {\n        if (this.instance) {\n            this.instance.play();\n            this.playButton.style.display = \"none\";\n        }\n    }\n    /**\n     * Whether this player is currently playing.\n     *\n     * @returns True if this player is playing, false if it's paused or hasn't started yet.\n     */\n    get isPlaying() {\n        if (this.instance) {\n            return this.instance.is_playing();\n        }\n        return false;\n    }\n    /**\n     * Returns the master volume of the player.\n     *\n     * @returns The volume. 1.0 is 100% volume.\n     */\n    get volume() {\n        if (this.instance) {\n            return this.instance.volume();\n        }\n        return 1.0;\n    }\n    /**\n     * Sets the master volume of the player.\n     *\n     * @param value The volume. 1.0 is 100% volume.\n     */\n    set volume(value) {\n        if (this.instance) {\n            this.instance.set_volume(value);\n        }\n    }\n    /**\n     * Checks if this player is allowed to be fullscreen by the browser.\n     *\n     * @returns True if you may call [[enterFullscreen]].\n     */\n    get fullscreenEnabled() {\n        return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled);\n    }\n    /**\n     * Checks if this player is currently fullscreen inside the browser.\n     *\n     * @returns True if it is fullscreen.\n     */\n    get isFullscreen() {\n        return ((document.fullscreenElement || document.webkitFullscreenElement) ===\n            this);\n    }\n    /**\n     * Exported function that requests the browser to change the fullscreen state if\n     * it is allowed.\n     *\n     * @param isFull Whether to set to fullscreen or return to normal.\n     */\n    setFullscreen(isFull) {\n        if (this.fullscreenEnabled) {\n            if (isFull) {\n                this.enterFullscreen();\n            }\n            else {\n                this.exitFullscreen();\n            }\n        }\n    }\n    /**\n     * Requests the browser to make this player fullscreen.\n     *\n     * This is not guaranteed to succeed, please check [[fullscreenEnabled]] first.\n     */\n    enterFullscreen() {\n        const options = {\n            navigationUI: \"hide\",\n        };\n        if (this.requestFullscreen) {\n            this.requestFullscreen(options);\n        }\n        else if (this.webkitRequestFullscreen) {\n            this.webkitRequestFullscreen(options);\n        }\n        else if (this.webkitRequestFullScreen) {\n            this.webkitRequestFullScreen(options);\n        }\n    }\n    /**\n     * Requests the browser to no longer make this player fullscreen.\n     */\n    exitFullscreen() {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        }\n        else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n        else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n        }\n    }\n    /**\n     * Called when entering / leaving fullscreen\n     */\n    fullScreenChange() {\n        var _a;\n        (_a = this.instance) === null || _a === void 0 ? void 0 : _a.set_fullscreen(this.isFullscreen);\n    }\n    pointerDown(event) {\n        if (event.pointerType === \"touch\" || event.pointerType === \"pen\") {\n            this.isTouch = true;\n        }\n    }\n    base64ToBlob(bytesBase64, mimeString) {\n        const byteString = atob(bytesBase64);\n        const ab = new ArrayBuffer(byteString.length);\n        const ia = new Uint8Array(ab);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        const blob = new Blob([ab], { type: mimeString });\n        return blob;\n    }\n    /**\n     * Download base-64 string as file\n     *\n     * @param bytesBase64 The base-64 encoded SOL string\n     * @param mimeType The MIME type\n     * @param fileName The name to give the file\n     */\n    saveFile(bytesBase64, mimeType, fileName) {\n        const blob = this.base64ToBlob(bytesBase64, mimeType);\n        const blobURL = URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = blobURL;\n        link.style.display = \"none\";\n        link.download = fileName;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(blobURL);\n    }\n    /**\n     * @returns If the string represent a base-64 encoded SOL file\n     * Check if string is a base-64 encoded SOL file\n     * @param solData The base-64 encoded SOL string\n     */\n    isB64SOL(solData) {\n        try {\n            const decodedData = atob(solData);\n            return decodedData.slice(6, 10) === \"TCSO\";\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    confirmReloadSave(solKey, b64SolData, replace) {\n        if (this.isB64SOL(b64SolData)) {\n            if (localStorage[solKey]) {\n                if (!replace) {\n                    const confirmDelete = confirm(\"Are you sure you want to delete this save file?\");\n                    if (!confirmDelete) {\n                        return;\n                    }\n                }\n                const swfPath = this.swfUrl ? this.swfUrl.pathname : \"\";\n                const swfHost = this.swfUrl\n                    ? this.swfUrl.hostname\n                    : document.location.hostname;\n                const savePath = solKey.split(\"/\").slice(1, -1).join(\"/\");\n                if (swfPath.includes(savePath) && solKey.startsWith(swfHost)) {\n                    const confirmReload = confirm(`The only way to ${replace ? \"replace\" : \"delete\"} this save file without potential conflict is to reload this content. Do you wish to continue anyway?`);\n                    if (confirmReload && this.loadedConfig) {\n                        this.destroy();\n                        replace\n                            ? localStorage.setItem(solKey, b64SolData)\n                            : localStorage.removeItem(solKey);\n                        this.load(this.loadedConfig);\n                        this.populateSaves();\n                        this.saveManager.close();\n                    }\n                    return;\n                }\n                replace\n                    ? localStorage.setItem(solKey, b64SolData)\n                    : localStorage.removeItem(solKey);\n                this.populateSaves();\n                this.saveManager.close();\n            }\n        }\n    }\n    /**\n     * Replace save from SOL file.\n     *\n     * @param event The change event fired\n     * @param solKey The localStorage save file key\n     */\n    replaceSOL(event, solKey) {\n        const fileInput = event.target;\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", () => {\n            if (reader.result && typeof reader.result === \"string\") {\n                const b64Regex = new RegExp(\"data:.*;base64,\");\n                const b64SolData = reader.result.replace(b64Regex, \"\");\n                this.confirmReloadSave(solKey, b64SolData, true);\n            }\n        });\n        if (fileInput &&\n            fileInput.files &&\n            fileInput.files.length > 0 &&\n            fileInput.files[0]) {\n            reader.readAsDataURL(fileInput.files[0]);\n        }\n    }\n    /**\n     * Delete local save.\n     *\n     * @param key The key to remove from local storage\n     */\n    deleteSave(key) {\n        const b64SolData = localStorage.getItem(key);\n        if (b64SolData) {\n            this.confirmReloadSave(key, b64SolData, false);\n        }\n    }\n    /**\n     * Puts the local save SOL file keys in a table.\n     */\n    populateSaves() {\n        const saveTable = this.saveManager.querySelector(\"#local-saves\");\n        if (!saveTable) {\n            return;\n        }\n        try {\n            localStorage;\n        }\n        catch (e) {\n            return;\n        }\n        saveTable.textContent = \"\";\n        Object.keys(localStorage).forEach((key) => {\n            const solName = key.split(\"/\").pop();\n            const solData = localStorage.getItem(key);\n            if (solName && solData && this.isB64SOL(solData)) {\n                const row = document.createElement(\"TR\");\n                const keyCol = document.createElement(\"TD\");\n                keyCol.textContent = solName;\n                keyCol.title = key;\n                const downloadCol = document.createElement(\"TD\");\n                const downloadSpan = document.createElement(\"SPAN\");\n                downloadSpan.textContent = \"Download\";\n                downloadSpan.className = \"save-option\";\n                downloadSpan.addEventListener(\"click\", () => this.saveFile(solData, \"application/octet-stream\", solName + \".sol\"));\n                downloadCol.appendChild(downloadSpan);\n                const replaceCol = document.createElement(\"TD\");\n                const replaceInput = (document.createElement(\"INPUT\"));\n                replaceInput.type = \"file\";\n                replaceInput.accept = \".sol\";\n                replaceInput.className = \"replace-save\";\n                replaceInput.id = \"replace-save-\" + key;\n                const replaceLabel = (document.createElement(\"LABEL\"));\n                replaceLabel.htmlFor = \"replace-save-\" + key;\n                replaceLabel.textContent = \"Replace\";\n                replaceLabel.className = \"save-option\";\n                replaceInput.addEventListener(\"change\", (event) => this.replaceSOL(event, key));\n                replaceCol.appendChild(replaceInput);\n                replaceCol.appendChild(replaceLabel);\n                const deleteCol = document.createElement(\"TD\");\n                const deleteSpan = document.createElement(\"SPAN\");\n                deleteSpan.textContent = \"Delete\";\n                deleteSpan.className = \"save-option\";\n                deleteSpan.addEventListener(\"click\", () => this.deleteSave(key));\n                deleteCol.appendChild(deleteSpan);\n                row.appendChild(keyCol);\n                row.appendChild(downloadCol);\n                row.appendChild(replaceCol);\n                row.appendChild(deleteCol);\n                saveTable.appendChild(row);\n            }\n        });\n    }\n    /**\n     * Gets the local save information as SOL files and downloads them.\n     */\n    backupSaves() {\n        Object.keys(localStorage).forEach((key) => {\n            const solName = key.split(\"/\").pop();\n            const solData = localStorage.getItem(key);\n            if (solData && this.isB64SOL(solData)) {\n                this.saveFile(solData, \"application/octet-stream\", solName + \".sol\");\n            }\n        });\n    }\n    /**\n     * Opens the save manager.\n     */\n    openSaveManager() {\n        this.saveManager.showModal();\n    }\n    /**\n     * Fetches the loaded SWF and downloads it.\n     */\n    async downloadSwf() {\n        try {\n            if (this.swfUrl) {\n                console.log(\"Downloading SWF: \" + this.swfUrl);\n                const response = await fetch(this.swfUrl.href);\n                if (!response.ok) {\n                    console.error(\"SWF download failed\");\n                    return;\n                }\n                const blob = await response.blob();\n                const blobUrl = URL.createObjectURL(blob);\n                const swfDownloadA = document.createElement(\"a\");\n                swfDownloadA.style.display = \"none\";\n                swfDownloadA.href = blobUrl;\n                swfDownloadA.download = swfFileName(this.swfUrl);\n                document.body.appendChild(swfDownloadA);\n                swfDownloadA.click();\n                document.body.removeChild(swfDownloadA);\n                URL.revokeObjectURL(blobUrl);\n            }\n            else {\n                console.error(\"SWF download failed\");\n            }\n        }\n        catch (err) {\n            console.error(\"SWF download failed\");\n        }\n    }\n    virtualKeyboardInput() {\n        const input = this.virtualKeyboard;\n        const string = input.value;\n        for (const char of string) {\n            for (const eventType of [\"keydown\", \"keyup\"]) {\n                this.dispatchEvent(new KeyboardEvent(eventType, {\n                    key: char,\n                    bubbles: true,\n                }));\n            }\n        }\n        input.value = \"\";\n    }\n    openVirtualKeyboard() {\n        // On Android, the Rust code that opens the virtual keyboard triggers\n        // before the TypeScript code that closes it, so delay opening it\n        if (navigator.userAgent.toLowerCase().includes(\"android\")) {\n            setTimeout(() => {\n                this.virtualKeyboard.focus({ preventScroll: true });\n            }, 100);\n        }\n        else {\n            this.virtualKeyboard.focus({ preventScroll: true });\n        }\n    }\n    contextMenuItems() {\n        const CHECKMARK = String.fromCharCode(0x2713);\n        const items = [];\n        if (this.instance) {\n            const customItems = this.instance.prepare_context_menu();\n            customItems.forEach((item, index) => {\n                // Don't start with separators.\n                if (item.separatorBefore && items.length > 0) {\n                    items.push(null);\n                }\n                items.push({\n                    // TODO: better checkboxes\n                    text: item.caption + (item.checked ? ` (${CHECKMARK})` : ``),\n                    onClick: () => { var _a; return (_a = this.instance) === null || _a === void 0 ? void 0 : _a.run_context_menu_callback(index); },\n                    enabled: item.enabled,\n                });\n            });\n            // Don't start with separators.\n            if (items.length > 0) {\n                items.push(null);\n            }\n        }\n        if (this.fullscreenEnabled) {\n            if (this.isFullscreen) {\n                items.push({\n                    text: \"Exit fullscreen\",\n                    onClick: () => { var _a; return (_a = this.instance) === null || _a === void 0 ? void 0 : _a.set_fullscreen(false); },\n                });\n            }\n            else {\n                items.push({\n                    text: \"Enter fullscreen\",\n                    onClick: () => { var _a; return (_a = this.instance) === null || _a === void 0 ? void 0 : _a.set_fullscreen(true); },\n                });\n            }\n        }\n        if (this.instance &&\n            this.swfUrl &&\n            this.loadedConfig &&\n            this.loadedConfig.showSwfDownload === true) {\n            items.push(null);\n            items.push({\n                text: \"Download .swf\",\n                onClick: this.downloadSwf.bind(this),\n            });\n        }\n        if (window.isSecureContext) {\n            items.push({\n                text: \"Copy debug info\",\n                onClick: () => navigator.clipboard.writeText(this.getPanicData()),\n            });\n        }\n        this.populateSaves();\n        const localSaveTable = this.saveManager.querySelector(\"#local-saves\");\n        if (localSaveTable && localSaveTable.textContent !== \"\") {\n            items.push({\n                text: \"Open Save Manager\",\n                onClick: this.openSaveManager.bind(this),\n            });\n        }\n        items.push(null);\n        const extensionString = this.isExtension ? \"extension\" : \"\";\n        items.push({\n            text: `About Ruffle ${extensionString} (${buildInfo.versionName})`,\n            onClick() {\n                window.open(RUFFLE_ORIGIN, \"_blank\");\n            },\n        });\n        // Give option to disable context menu when touch support is being used\n        // to avoid a long press triggering the context menu. (#1972)\n        if (this.isTouch) {\n            items.push(null);\n            items.push({\n                text: \"Hide this menu\",\n                onClick: () => (this.contextMenuForceDisabled = true),\n            });\n        }\n        return items;\n    }\n    clearLongPressTimer() {\n        if (this.longPressTimer) {\n            clearTimeout(this.longPressTimer);\n            this.longPressTimer = null;\n        }\n    }\n    startLongPressTimer() {\n        const longPressTimeout = 800;\n        this.clearLongPressTimer();\n        this.longPressTimer = setTimeout(() => this.clearLongPressTimer(), longPressTimeout);\n    }\n    checkLongPress(event) {\n        if (this.longPressTimer) {\n            this.clearLongPressTimer();\n            // The pointerType condition is to ensure right-click does not trigger\n            // a context menu the wrong way the first time you right-click,\n            // before contextMenuSupported is set.\n        }\n        else if (!this.contextMenuSupported &&\n            event.pointerType !== \"mouse\") {\n            this.showContextMenu(event);\n        }\n    }\n    showContextMenu(event) {\n        event.preventDefault();\n        if (event.type === \"contextmenu\") {\n            this.contextMenuSupported = true;\n            window.addEventListener(\"click\", this.hideContextMenu.bind(this), {\n                once: true,\n            });\n        }\n        else {\n            window.addEventListener(\"pointerup\", this.hideContextMenu.bind(this), { once: true });\n            event.stopPropagation();\n        }\n        if ((this.loadedConfig && this.loadedConfig.contextMenu === false) ||\n            this.contextMenuForceDisabled) {\n            return;\n        }\n        // Clear all context menu items.\n        while (this.contextMenuElement.firstChild) {\n            this.contextMenuElement.removeChild(this.contextMenuElement.firstChild);\n        }\n        // Populate context menu items.\n        for (const item of this.contextMenuItems()) {\n            if (item === null) {\n                const menuSeparator = document.createElement(\"li\");\n                menuSeparator.className = \"menu_separator\";\n                const hr = document.createElement(\"hr\");\n                menuSeparator.appendChild(hr);\n                this.contextMenuElement.appendChild(menuSeparator);\n            }\n            else {\n                const { text, onClick, enabled } = item;\n                const menuItem = document.createElement(\"li\");\n                menuItem.className = \"menu_item\";\n                menuItem.textContent = text;\n                this.contextMenuElement.appendChild(menuItem);\n                if (enabled !== false) {\n                    menuItem.addEventListener(this.contextMenuSupported ? \"click\" : \"pointerup\", onClick);\n                }\n                else {\n                    menuItem.classList.add(\"disabled\");\n                }\n            }\n        }\n        // Place a context menu in the top-left corner, so\n        // its `clientWidth` and `clientHeight` are not clamped.\n        this.contextMenuElement.style.left = \"0\";\n        this.contextMenuElement.style.top = \"0\";\n        this.contextMenuElement.style.display = \"block\";\n        const rect = this.getBoundingClientRect();\n        const x = event.clientX - rect.x;\n        const y = event.clientY - rect.y;\n        const maxX = rect.width - this.contextMenuElement.clientWidth - 1;\n        const maxY = rect.height - this.contextMenuElement.clientHeight - 1;\n        this.contextMenuElement.style.left =\n            Math.floor(Math.min(x, maxX)) + \"px\";\n        this.contextMenuElement.style.top =\n            Math.floor(Math.min(y, maxY)) + \"px\";\n    }\n    hideContextMenu() {\n        var _a;\n        (_a = this.instance) === null || _a === void 0 ? void 0 : _a.clear_custom_menu_items();\n        this.contextMenuElement.style.display = \"none\";\n    }\n    /**\n     * Pauses this player.\n     *\n     * No more frames, scripts or sounds will be executed.\n     * This movie will be considered inactive and will not wake up until resumed.\n     */\n    pause() {\n        if (this.instance) {\n            this.instance.pause();\n            this.playButton.style.display = \"block\";\n        }\n    }\n    audioState() {\n        if (this.instance) {\n            const audioContext = this.instance.audio_context();\n            return (audioContext && audioContext.state) || \"running\";\n        }\n        return \"suspended\";\n    }\n    unmuteOverlayClicked() {\n        if (this.instance) {\n            if (this.audioState() !== \"running\") {\n                const audioContext = this.instance.audio_context();\n                if (audioContext) {\n                    audioContext.resume();\n                }\n            }\n            this.unmuteOverlay.style.display = \"none\";\n        }\n    }\n    /**\n     * Plays a silent sound based on the AudioContext's sample rate.\n     *\n     * This is used to unmute audio on iOS and iPadOS when silent mode is enabled on the device (issue 1552).\n     */\n    unmuteAudioContext() {\n        // No need to play the dummy sound again once audio is unmuted.\n        if (isAudioContextUnmuted) {\n            return;\n        }\n        // TODO: Use `navigator.userAgentData` to detect the platform when support improves?\n        if (navigator.maxTouchPoints < 1) {\n            isAudioContextUnmuted = true;\n            return;\n        }\n        this.container.addEventListener(\"click\", () => {\n            var _a;\n            if (isAudioContextUnmuted) {\n                return;\n            }\n            const audioContext = (_a = this.instance) === null || _a === void 0 ? void 0 : _a.audio_context();\n            if (!audioContext) {\n                return;\n            }\n            const audio = new Audio();\n            audio.src = (() => {\n                // Returns a seven samples long 8 bit mono WAVE file.\n                // This is required to prevent the AudioContext from desyncing and crashing.\n                const arrayBuffer = new ArrayBuffer(10);\n                const dataView = new DataView(arrayBuffer);\n                const sampleRate = audioContext.sampleRate;\n                dataView.setUint32(0, sampleRate, true);\n                dataView.setUint32(4, sampleRate, true);\n                dataView.setUint16(8, 1, true);\n                const missingCharacters = window\n                    .btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)))\n                    .slice(0, 13);\n                return `data:audio/wav;base64,UklGRisAAABXQVZFZm10IBAAAAABAAEA${missingCharacters}AgAZGF0YQcAAACAgICAgICAAAA=`;\n            })();\n            audio.load();\n            audio\n                .play()\n                .then(() => {\n                isAudioContextUnmuted = true;\n            })\n                .catch((err) => {\n                console.warn(`Failed to play dummy sound: ${err}`);\n            });\n        }, { once: true });\n    }\n    /**\n     * Copies attributes and children from another element to this player element.\n     * Used by the polyfill elements, RuffleObject and RuffleEmbed.\n     *\n     * @param element The element to copy all attributes from.\n     * @protected\n     */\n    copyElement(element) {\n        if (element) {\n            for (const attribute of element.attributes) {\n                if (attribute.specified) {\n                    // Issue 468: Chrome \"Click to Active Flash\" box stomps on title attribute\n                    if (attribute.name === \"title\" &&\n                        attribute.value === \"Adobe Flash Player\") {\n                        continue;\n                    }\n                    try {\n                        this.setAttribute(attribute.name, attribute.value);\n                    }\n                    catch (err) {\n                        // The embed may have invalid attributes, so handle these gracefully.\n                        console.warn(`Unable to set attribute ${attribute.name} on Ruffle instance`);\n                    }\n                }\n            }\n            for (const node of Array.from(element.children)) {\n                this.appendChild(node);\n            }\n        }\n    }\n    /**\n     * Converts a dimension attribute on an HTML embed/object element to a valid CSS dimension.\n     * HTML element dimensions are unitless, but can also be percentages.\n     * Add a 'px' unit unless the value is a percentage.\n     * Returns null if this is not a valid dimension.\n     *\n     * @param attribute The attribute to convert\n     *\n     * @private\n     */\n    static htmlDimensionToCssDimension(attribute) {\n        if (attribute) {\n            const match = attribute.match(DIMENSION_REGEX);\n            if (match) {\n                let out = match[1];\n                if (!match[3]) {\n                    // Unitless -- add px for CSS.\n                    out += \"px\";\n                }\n                return out;\n            }\n        }\n        return null;\n    }\n    /**\n     * When a movie presents a new callback through `ExternalInterface.addCallback`,\n     * we are informed so that we can expose the method on any relevant DOM element.\n     *\n     * This should only be called by Ruffle itself and not by users.\n     *\n     * @param name The name of the callback that is now available.\n     *\n     * @internal\n     * @ignore\n     */\n    onCallbackAvailable(name) {\n        const instance = this.instance;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this[name] = (...args) => {\n            return instance === null || instance === void 0 ? void 0 : instance.call_exposed_callback(name, args);\n        };\n    }\n    /**\n     * Sets a trace observer on this flash player.\n     *\n     * The observer will be called, as a function, for each message that the playing movie will \"trace\" (output).\n     *\n     * @param observer The observer that will be called for each trace.\n     */\n    set traceObserver(observer) {\n        var _a;\n        (_a = this.instance) === null || _a === void 0 ? void 0 : _a.set_trace_observer(observer);\n    }\n    /**\n     * Get data included in any panic of this ruffle-player\n     *\n     * @returns A string containing all the data included in the panic.\n     */\n    getPanicData() {\n        const dataArray = [];\n        dataArray.push(\"\\n# Player Info\\n\");\n        dataArray.push(this.debugPlayerInfo());\n        dataArray.push(\"\\n# Page Info\\n\");\n        dataArray.push(`Page URL: ${document.location.href}\\n`);\n        if (this.swfUrl) {\n            dataArray.push(`SWF URL: ${this.swfUrl}\\n`);\n        }\n        dataArray.push(\"\\n# Browser Info\\n\");\n        dataArray.push(`User Agent: ${window.navigator.userAgent}\\n`);\n        dataArray.push(`Platform: ${window.navigator.platform}\\n`);\n        dataArray.push(`Has touch support: ${window.navigator.maxTouchPoints > 0}\\n`);\n        dataArray.push(\"\\n# Ruffle Info\\n\");\n        dataArray.push(`Version: ${buildInfo.versionNumber}\\n`);\n        dataArray.push(`Name: ${buildInfo.versionName}\\n`);\n        dataArray.push(`Channel: ${buildInfo.versionChannel}\\n`);\n        dataArray.push(`Built: ${buildInfo.buildDate}\\n`);\n        dataArray.push(`Commit: ${buildInfo.commitHash}\\n`);\n        dataArray.push(`Is extension: ${this.isExtension}\\n`);\n        dataArray.push(\"\\n# Metadata\\n\");\n        if (this.metadata) {\n            for (const [key, value] of Object.entries(this.metadata)) {\n                dataArray.push(`${key}: ${value}\\n`);\n            }\n        }\n        return dataArray.join(\"\");\n    }\n    /**\n     * Panics this specific player, forcefully destroying all resources and displays an error message to the user.\n     *\n     * This should be called when something went absolutely, incredibly and disastrously wrong and there is no chance\n     * of recovery.\n     *\n     * Ruffle will attempt to isolate all damage to this specific player instance, but no guarantees can be made if there\n     * was a core issue which triggered the panic. If Ruffle is unable to isolate the cause to a specific player, then\n     * all players will panic and Ruffle will become \"poisoned\" - no more players will run on this page until it is\n     * reloaded fresh.\n     *\n     * @param error The error, if any, that triggered this panic.\n     */\n    panic(error) {\n        var _a;\n        if (this.panicked) {\n            // Only show the first major error, not any repeats - they aren't as important\n            return;\n        }\n        this.panicked = true;\n        this.hideSplashScreen();\n        if (error instanceof Error &&\n            (error.name === \"AbortError\" ||\n                error.message.includes(\"AbortError\"))) {\n            // Firefox: Don't display the panic screen if the user leaves the page while something is still loading\n            return;\n        }\n        const errorIndex = (_a = error === null || error === void 0 ? void 0 : error.ruffleIndexError) !== null && _a !== void 0 ? _a : PanicError.Unknown;\n        const errorArray = Object.assign([], {\n            stackIndex: -1,\n            avmStackIndex: -1,\n        });\n        errorArray.push(\"# Error Info\\n\");\n        if (error instanceof Error) {\n            errorArray.push(`Error name: ${error.name}\\n`);\n            errorArray.push(`Error message: ${error.message}\\n`);\n            if (error.stack) {\n                const stackIndex = errorArray.push(`Error stack:\\n\\`\\`\\`\\n${error.stack}\\n\\`\\`\\`\\n`) - 1;\n                if (error.avmStack) {\n                    const avmStackIndex = errorArray.push(`AVM2 stack:\\n\\`\\`\\`\\n    ${error.avmStack\n                        .trim()\n                        .replace(/\\t/g, \"    \")}\\n\\`\\`\\`\\n`) - 1;\n                    errorArray.avmStackIndex = avmStackIndex;\n                }\n                errorArray.stackIndex = stackIndex;\n            }\n        }\n        else {\n            errorArray.push(`Error: ${error}\\n`);\n        }\n        errorArray.push(this.getPanicData());\n        const errorText = errorArray.join(\"\");\n        const buildDate = new Date(buildInfo.buildDate);\n        const monthsPrior = new Date();\n        monthsPrior.setMonth(monthsPrior.getMonth() - 6); // 6 months prior\n        const isBuildOutdated = monthsPrior > buildDate;\n        // Create a link to GitHub with all of the error data, if the build is not outdated.\n        // Otherwise, create a link to the downloads section on the Ruffle website.\n        let actionTag;\n        if (!isBuildOutdated) {\n            // Remove query params for the issue title.\n            const pageUrl = document.location.href.split(/[?#]/)[0];\n            const issueTitle = `Error on ${pageUrl}`;\n            let issueLink = `https://github.com/ruffle-rs/ruffle/issues/new?title=${encodeURIComponent(issueTitle)}&template=error_report.md&labels=error-report&body=`;\n            let issueBody = encodeURIComponent(errorText);\n            if (errorArray.stackIndex > -1 &&\n                String(issueLink + issueBody).length > 8195) {\n                // Strip the stack error from the array when the produced URL is way too long.\n                // This should prevent \"414 Request-URI Too Large\" errors on GitHub.\n                errorArray[errorArray.stackIndex] = null;\n                if (errorArray.avmStackIndex > -1) {\n                    errorArray[errorArray.avmStackIndex] = null;\n                }\n                issueBody = encodeURIComponent(errorArray.join(\"\"));\n            }\n            issueLink += issueBody;\n            actionTag = `<a target=\"_top\" href=\"${issueLink}\">Report Bug</a>`;\n        }\n        else {\n            actionTag = `<a target=\"_top\" href=\"${RUFFLE_ORIGIN}#downloads\">Update Ruffle</a>`;\n        }\n        // Clears out any existing content (ie play button or canvas) and replaces it with the error screen\n        let errorBody, errorFooter;\n        switch (errorIndex) {\n            case PanicError.FileProtocol:\n                // General error: Running on the `file:` protocol\n                errorBody = `\n                    <p>It appears you are running Ruffle on the \"file:\" protocol.</p>\n                    <p>This doesn't work as browsers block many features from working for security reasons.</p>\n                    <p>Instead, we invite you to setup a local server or either use the web demo or the desktop application.</p>\n                `;\n                errorFooter = `\n                    <li><a target=\"_top\" href=\"${RUFFLE_ORIGIN}/demo\">Web Demo</a></li>\n                    <li><a target=\"_top\" href=\"${RUFFLE_ORIGIN}#downloads\">Desktop Application</a></li>\n                `;\n                break;\n            case PanicError.JavascriptConfiguration:\n                // General error: Incorrect JavaScript configuration\n                errorBody = `\n                    <p>Ruffle has encountered a major issue due to an incorrect JavaScript configuration.</p>\n                    <p>If you are the server administrator, we invite you to check the error details to find out which parameter is at fault.</p>\n                    <p>You can also consult the Ruffle wiki for help.</p>\n                `;\n                errorFooter = `\n                    <li><a target=\"_top\" href=\"https://github.com/ruffle-rs/ruffle/wiki/Using-Ruffle#javascript-api\">View Ruffle Wiki</a></li>\n                    <li><a href=\"#\" id=\"panic-view-details\">View Error Details</a></li>\n                `;\n                break;\n            case PanicError.WasmNotFound:\n                // Self hosted: Cannot load `.wasm` file - file not found\n                errorBody = `\n                    <p>Ruffle failed to load the required \".wasm\" file component.</p>\n                    <p>If you are the server administrator, please ensure the file has correctly been uploaded.</p>\n                    <p>If the issue persists, you may need to use the \"publicPath\" setting: please consult the Ruffle wiki for help.</p>\n                `;\n                errorFooter = `\n                    <li><a target=\"_top\" href=\"https://github.com/ruffle-rs/ruffle/wiki/Using-Ruffle#configuration-options\">View Ruffle Wiki</a></li>\n                    <li><a href=\"#\" id=\"panic-view-details\">View Error Details</a></li>\n                `;\n                break;\n            case PanicError.WasmMimeType:\n                // Self hosted: Cannot load `.wasm` file - incorrect MIME type\n                errorBody = `\n                    <p>Ruffle has encountered a major issue whilst trying to initialize.</p>\n                    <p>This web server is not serving \".wasm\" files with the correct MIME type.</p>\n                    <p>If you are the server administrator, please consult the Ruffle wiki for help.</p>\n                `;\n                errorFooter = `\n                    <li><a target=\"_top\" href=\"https://github.com/ruffle-rs/ruffle/wiki/Using-Ruffle#configure-webassembly-mime-type\">View Ruffle Wiki</a></li>\n                    <li><a href=\"#\" id=\"panic-view-details\">View Error Details</a></li>\n                `;\n                break;\n            case PanicError.SwfFetchError:\n                errorBody = `\n                    <p>Ruffle failed to load the Flash SWF file.</p>\n                    <p>The most likely reason is that the file no longer exists, so there is nothing for Ruffle to load.</p>\n                    <p>Try contacting the website administrator for help.</p>\n                `;\n                errorFooter = `\n                    <li><a href=\"#\" id=\"panic-view-details\">View Error Details</a></li>\n                `;\n                break;\n            case PanicError.SwfCors:\n                // Self hosted: Cannot load SWF file - CORS issues\n                errorBody = `\n                    <p>Ruffle failed to load the Flash SWF file.</p>\n                    <p>Access to fetch has likely been blocked by CORS policy.</p>\n                    <p>If you are the server administrator, please consult the Ruffle wiki for help.</p>\n                `;\n                errorFooter = `\n                    <li><a target=\"_top\" href=\"https://github.com/ruffle-rs/ruffle/wiki/Using-Ruffle#configure-cors-header\">View Ruffle Wiki</a></li>\n                    <li><a href=\"#\" id=\"panic-view-details\">View Error Details</a></li>\n                `;\n                break;\n            case PanicError.WasmCors:\n                // Self hosted: Cannot load `.wasm` file - CORS issues\n                errorBody = `\n                    <p>Ruffle failed to load the required \".wasm\" file component.</p>\n                    <p>Access to fetch has likely been blocked by CORS policy.</p>\n                    <p>If you are the server administrator, please consult the Ruffle wiki for help.</p>\n                `;\n                errorFooter = `\n                    <li><a target=\"_top\" href=\"https://github.com/ruffle-rs/ruffle/wiki/Using-Ruffle#configure-cors-header\">View Ruffle Wiki</a></li>\n                    <li><a href=\"#\" id=\"panic-view-details\">View Error Details</a></li>\n                `;\n                break;\n            case PanicError.InvalidWasm:\n                // Self hosted: Cannot load `.wasm` file - incorrect configuration or missing files\n                errorBody = `\n                    <p>Ruffle has encountered a major issue whilst trying to initialize.</p>\n                    <p>It seems like this page has missing or invalid files for running Ruffle.</p>\n                    <p>If you are the server administrator, please consult the Ruffle wiki for help.</p>\n                `;\n                errorFooter = `\n                    <li><a target=\"_top\" href=\"https://github.com/ruffle-rs/ruffle/wiki/Using-Ruffle#addressing-a-compileerror\">View Ruffle Wiki</a></li>\n                    <li><a href=\"#\" id=\"panic-view-details\">View Error Details</a></li>\n                `;\n                break;\n            case PanicError.WasmDownload:\n                // Usually a transient network error or botched deployment\n                errorBody = `\n                    <p>Ruffle has encountered a major issue whilst trying to initialize.</p>\n                    <p>This can often resolve itself, so you can try reloading the page.</p>\n                    <p>Otherwise, please contact the website administrator.</p>\n                `;\n                errorFooter = `\n                    <li><a href=\"#\" id=\"panic-view-details\">View Error Details</a></li>\n                `;\n                break;\n            case PanicError.WasmDisabledMicrosoftEdge:\n                // Self hosted: User has disabled WebAssembly in Microsoft Edge through the\n                // \"Enhance your Security on the web\" setting.\n                errorBody = `\n                    <p>Ruffle failed to load the required \".wasm\" file component.</p>\n                    <p>To fix this, try opening your browser's settings, clicking \"Privacy, search, and services\", scrolling down, and turning off \"Enhance your security on the web\".</p>\n                    <p>This will allow your browser to load the required \".wasm\" files.</p>\n                    <p>If the issue persists, you might have to use a different browser.</p>\n                `;\n                errorFooter = `\n                    <li><a target=\"_top\" href=\"https://github.com/ruffle-rs/ruffle/wiki/Frequently-Asked-Questions-For-Users#edge-webassembly-error\">More Information</a></li>\n                    <li><a href=\"#\" id=\"panic-view-details\">View Error Details</a></li>\n                `;\n                break;\n            case PanicError.JavascriptConflict:\n                // Self hosted: Cannot load `.wasm` file - a native object / function is overriden\n                errorBody = `\n                    <p>Ruffle has encountered a major issue whilst trying to initialize.</p>\n                    <p>It seems like this page uses JavaScript code that conflicts with Ruffle.</p>\n                    <p>If you are the server administrator, we invite you to try loading the file on a blank page.</p>\n                `;\n                if (isBuildOutdated) {\n                    errorBody += `<p>You can also try to upload a more recent version of Ruffle that may circumvent the issue (current build is outdated: ${buildInfo.buildDate}).</p>`;\n                }\n                errorFooter = `\n                    <li>${actionTag}</li>\n                    <li><a href=\"#\" id=\"panic-view-details\">View Error Details</a></li>\n                `;\n                break;\n            case PanicError.CSPConflict:\n                // General error: Cannot load `.wasm` file - a native object / function is overriden\n                errorBody = `\n                    <p>Ruffle has encountered a major issue whilst trying to initialize.</p>\n                    <p>This web server's Content Security Policy does not allow the required \".wasm\" component to run.</p>\n                    <p>If you are the server administrator, please consult the Ruffle wiki for help.</p>\n                `;\n                errorFooter = `\n                    <li><a target=\"_top\" href=\"https://github.com/ruffle-rs/ruffle/wiki/Using-Ruffle#configure-wasm-csp\">View Ruffle Wiki</a></li>\n                    <li><a href=\"#\" id=\"panic-view-details\">View Error Details</a></li>\n                `;\n                break;\n            default:\n                // Unknown error\n                errorBody = `<p>Ruffle has encountered a major issue whilst trying to display this Flash content.</p>`;\n                if (!isBuildOutdated) {\n                    errorBody += `<p>This isn't supposed to happen, so we'd really appreciate if you could file a bug!</p>`;\n                }\n                else {\n                    errorBody += `<p>If you are the server administrator, please try to upload a more recent version of Ruffle (current build is outdated: ${buildInfo.buildDate}).</p>`;\n                }\n                errorFooter = `\n                    <li>${actionTag}</li>\n                    <li><a href=\"#\" id=\"panic-view-details\">View Error Details</a></li>\n                `;\n                break;\n        }\n        this.container.innerHTML = `\n            <div id=\"panic\">\n                <div id=\"panic-title\">Something went wrong :(</div>\n                <div id=\"panic-body\">${errorBody}</div>\n                <div id=\"panic-footer\">\n                    <ul>${errorFooter}</ul>\n                </div>\n            </div>\n        `;\n        const viewDetails = (this.container.querySelector(\"#panic-view-details\"));\n        if (viewDetails) {\n            viewDetails.onclick = () => {\n                const panicBody = (this.container.querySelector(\"#panic-body\"));\n                panicBody.classList.add(\"details\");\n                panicBody.innerHTML = `<textarea>${errorText}</textarea>`;\n                return false;\n            };\n        }\n        // Do this last, just in case it causes any cascading issues.\n        this.destroy();\n    }\n    displayRootMovieDownloadFailedMessage() {\n        if (this.isExtension &&\n            window.location.origin !== this.swfUrl.origin) {\n            this.hideSplashScreen();\n            const div = document.createElement(\"div\");\n            div.id = \"message_overlay\";\n            div.innerHTML = `<div class=\"message\">\n                <p>Ruffle wasn't able to run the Flash embedded in this page.</p>\n                <p>You can try to open the file in a separate tab, to sidestep this issue.</p>\n                <div>\n                    <a target=\"_blank\" href=\"${this.swfUrl}\">Open in a new tab</a>\n                </div>\n            </div>`;\n            this.container.prepend(div);\n        }\n        else {\n            const error = new Error(\"Failed to fetch: \" + this.swfUrl);\n            if (!this.swfUrl.protocol.includes(\"http\")) {\n                error.ruffleIndexError = PanicError.FileProtocol;\n            }\n            else if (window.location.origin === this.swfUrl.origin) {\n                error.ruffleIndexError = PanicError.SwfFetchError;\n            }\n            else {\n                // This is a selfhosted build of Ruffle that tried to make a cross-origin request\n                error.ruffleIndexError = PanicError.SwfCors;\n            }\n            this.panic(error);\n        }\n    }\n    displayUnsupportedMessage() {\n        const div = document.createElement(\"div\");\n        div.id = \"message_overlay\";\n        // TODO: Change link to https://ruffle.rs/faq or similar\n        // TODO: Pause content until message is dismissed\n        div.innerHTML = `<div class=\"message\">\n            <p>The Ruffle emulator may not yet fully support all of ActionScript 3 used by this content.</p>\n            <p>Some parts of the content may not work as expected.</p>\n            <div>\n                <a target=\"_blank\" class=\"more-info-link\" href=\"https://github.com/ruffle-rs/ruffle/wiki/Frequently-Asked-Questions-For-Users\">More info</a>\n                <button id=\"run-anyway-btn\">Run anyway</button>\n            </div>\n        </div>`;\n        this.container.prepend(div);\n        const button = div.querySelector(\"#run-anyway-btn\");\n        button.onclick = () => {\n            div.parentNode.removeChild(div);\n        };\n    }\n    /**\n     * Show a dismissible message in front of the player.\n     *\n     * @param message The message shown to the user.\n     */\n    displayMessage(message) {\n        const div = document.createElement(\"div\");\n        div.id = \"message_overlay\";\n        div.innerHTML = `<div class=\"message\">\n            <p>${message}</p>\n            <div>\n                <button id=\"continue-btn\">continue</button>\n            </div>\n        </div>`;\n        this.container.prepend(div);\n        (this.container.querySelector(\"#continue-btn\")).onclick = () => {\n            div.parentNode.removeChild(div);\n        };\n    }\n    debugPlayerInfo() {\n        let result = `Allows script access: ${this.loadedConfig ? this.loadedConfig.allowScriptAccess : false}\\n`;\n        let renderInfo = `(Cached) ${this._cachedDebugInfo}`;\n        if (this.instance) {\n            try {\n                renderInfo = this.instance.renderer_debug_info();\n            }\n            catch (_a) {\n                // ignored\n            }\n        }\n        if (renderInfo) {\n            result += `${renderInfo}\\n`;\n        }\n        return result;\n    }\n    hideSplashScreen() {\n        this.splashScreen.classList.add(\"hidden\");\n        this.container.classList.remove(\"hidden\");\n    }\n    showSplashScreen() {\n        this.splashScreen.classList.remove(\"hidden\");\n        this.container.classList.add(\"hidden\");\n    }\n    setMetadata(metadata) {\n        this._metadata = metadata;\n        // TODO: Switch this to ReadyState.Loading when we have streaming support.\n        this._readyState = ReadyState.Loaded;\n        this.hideSplashScreen();\n        this.dispatchEvent(new Event(RufflePlayer.LOADED_METADATA));\n        // TODO: Move this to whatever function changes the ReadyState to Loaded when we have streaming support.\n        this.dispatchEvent(new Event(RufflePlayer.LOADED_DATA));\n    }\n    setIsExtension(isExtension) {\n        this.isExtension = isExtension;\n    }\n}\n/**\n * Triggered when a movie metadata has been loaded (such as movie width and height).\n *\n * @event RufflePlayer#loadedmetadata\n */\nRufflePlayer.LOADED_METADATA = \"loadedmetadata\";\n/**\n * Triggered when a movie is fully loaded.\n *\n * @event RufflePlayer#loadeddata\n */\nRufflePlayer.LOADED_DATA = \"loadeddata\";\nexport { RufflePlayer };\n/**\n * Describes the loading state of an SWF movie.\n */\nexport var ReadyState;\n(function (ReadyState) {\n    /**\n     * No movie is loaded, or no information is yet available about the movie.\n     */\n    ReadyState[ReadyState[\"HaveNothing\"] = 0] = \"HaveNothing\";\n    /**\n     * The movie is still loading, but it has started playback, and metadata is available.\n     */\n    ReadyState[ReadyState[\"Loading\"] = 1] = \"Loading\";\n    /**\n     * The movie has completely loaded.\n     */\n    ReadyState[ReadyState[\"Loaded\"] = 2] = \"Loaded\";\n})(ReadyState || (ReadyState = {}));\n/**\n * Returns whether a SWF file can call JavaScript code in the surrounding HTML file.\n *\n * @param access The value of the `allowScriptAccess` attribute.\n * @param url The URL of the SWF file.\n * @returns True if script access is allowed.\n */\nexport function isScriptAccessAllowed(access, url) {\n    if (!access) {\n        access = \"sameDomain\";\n    }\n    switch (access.toLowerCase()) {\n        case \"always\":\n            return true;\n        case \"never\":\n            return false;\n        case \"samedomain\":\n        default:\n            try {\n                return (new URL(window.location.href).origin ===\n                    new URL(url, window.location.href).origin);\n            }\n            catch (_a) {\n                return false;\n            }\n    }\n}\n/**\n * Returns whether a SWF file should show the built-in context menu items.\n *\n * @param menu The value of the `menu` attribute.\n * @returns True if the built-in context items should be shown.\n */\nexport function isBuiltInContextMenuVisible(menu) {\n    if (menu === null || menu.toLowerCase() === \"true\") {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns whether the given filename is a Youtube Flash source.\n *\n * @param filename The filename to test.\n * @returns True if the filename is a Youtube Flash source.\n */\nexport function isYoutubeFlashSource(filename) {\n    if (filename) {\n        let pathname = \"\";\n        let cleaned_hostname = \"\";\n        try {\n            // A base URL is required if `filename` is a relative URL, but we don't need to detect the real URL origin.\n            const url = new URL(filename, RUFFLE_ORIGIN);\n            pathname = url.pathname;\n            cleaned_hostname = url.hostname.replace(\"www.\", \"\");\n        }\n        catch (err) {\n            // Some invalid filenames, like `///`, could raise a TypeError. Let's fail silently in this situation.\n        }\n        // See https://wiki.mozilla.org/QA/Youtube_Embedded_Rewrite\n        if (pathname.startsWith(\"/v/\") &&\n            (cleaned_hostname === \"youtube.com\" ||\n                cleaned_hostname === \"youtube-nocookie.com\")) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Workaround Youtube mixed content if upgradeToHttps is true.\n *\n * @param elem The element to change.\n * @param attr The attribute to adjust.\n */\nexport function workaroundYoutubeMixedContent(elem, attr) {\n    var _a, _b;\n    const elem_attr = elem.getAttribute(attr);\n    const window_config = (_b = (_a = window.RufflePlayer) === null || _a === void 0 ? void 0 : _a.config) !== null && _b !== void 0 ? _b : {};\n    if (elem_attr) {\n        try {\n            const url = new URL(elem_attr);\n            if (url.protocol === \"http:\" &&\n                window.location.protocol === \"https:\" &&\n                (!(\"upgradeToHttps\" in window_config) ||\n                    window_config.upgradeToHttps !== false)) {\n                url.protocol = \"https:\";\n                elem.setAttribute(attr, url.toString());\n            }\n        }\n        catch (err) {\n            // Some invalid filenames, like `///`, could raise a TypeError. Let's fail silently in this situation.\n        }\n    }\n}\n/**\n * Returns whether the given filename ends in a known flash extension.\n *\n * @param filename The filename to test.\n * @returns True if the filename is a flash movie (swf or spl).\n */\nexport function isSwfFilename(filename) {\n    if (filename) {\n        let pathname = \"\";\n        try {\n            // A base URL is required if `filename` is a relative URL, but we don't need to detect the real URL origin.\n            pathname = new URL(filename, RUFFLE_ORIGIN).pathname;\n        }\n        catch (err) {\n            // Some invalid filenames, like `///`, could raise a TypeError. Let's fail silently in this situation.\n        }\n        if (pathname && pathname.length >= 4) {\n            const extension = pathname.slice(-4).toLowerCase();\n            if (extension === \".swf\" || extension === \".spl\") {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/**\n * Returns whether the given MIME type is a known flash type.\n *\n * @param mimeType The MIME type to test.\n * @returns True if the MIME type is a flash MIME type.\n */\nexport function isSwfMimeType(mimeType) {\n    switch (mimeType.toLowerCase()) {\n        case FLASH_MIMETYPE.toLowerCase():\n        case FUTURESPLASH_MIMETYPE.toLowerCase():\n        case FLASH7_AND_8_MIMETYPE.toLowerCase():\n        case FLASH_MOVIE_MIMETYPE.toLowerCase():\n            return true;\n        default:\n            return false;\n    }\n}\n/**\n * Determine if an element is a child of a node that was not supported\n * in non-HTML5 compliant browsers. If so, the element was meant to be\n * used as a fallback content.\n *\n * @param elem The element to test.\n * @returns True if the element is inside an <audio> or <video> node.\n */\nexport function isFallbackElement(elem) {\n    let parent = elem.parentElement;\n    while (parent !== null) {\n        switch (parent.tagName) {\n            case \"AUDIO\":\n            case \"VIDEO\":\n                return true;\n        }\n        parent = parent.parentElement;\n    }\n    return false;\n}\n","var _a, _b;\nimport { RuffleObject } from \"./ruffle-object\";\nimport { RuffleEmbed } from \"./ruffle-embed\";\nimport { installPlugin, FLASH_PLUGIN } from \"./plugin-polyfill\";\nimport { publicPath } from \"./public-path\";\nlet isExtension;\nconst globalConfig = (_b = (_a = window.RufflePlayer) === null || _a === void 0 ? void 0 : _a.config) !== null && _b !== void 0 ? _b : {};\nconst jsScriptUrl = publicPath(globalConfig) + \"ruffle.js\";\n/**\n * Polyfill native Flash elements with Ruffle equivalents.\n *\n * This polyfill isn't fool-proof: If there's a chance site JavaScript has\n * access to a pre-polyfill element, then this will break horribly. We can\n * keep native objects out of the DOM, and thus out of JavaScript's grubby\n * little hands, but only if we load first.\n */\nlet objects;\nlet embeds;\n/**\n *\n */\nfunction polyfillFlashInstances() {\n    try {\n        // Create live collections to track embed tags.\n        objects = objects !== null && objects !== void 0 ? objects : document.getElementsByTagName(\"object\");\n        embeds = embeds !== null && embeds !== void 0 ? embeds : document.getElementsByTagName(\"embed\");\n        // Replace <object> first, because <object> often wraps <embed>.\n        for (const elem of Array.from(objects)) {\n            if (RuffleObject.isInterdictable(elem)) {\n                const ruffleObject = RuffleObject.fromNativeObjectElement(elem);\n                ruffleObject.setIsExtension(isExtension);\n                elem.replaceWith(ruffleObject);\n            }\n        }\n        for (const elem of Array.from(embeds)) {\n            if (RuffleEmbed.isInterdictable(elem)) {\n                const ruffleEmbed = RuffleEmbed.fromNativeEmbedElement(elem);\n                ruffleEmbed.setIsExtension(isExtension);\n                elem.replaceWith(ruffleEmbed);\n            }\n        }\n    }\n    catch (err) {\n        console.error(`Serious error encountered when polyfilling native Flash elements: ${err}`);\n    }\n}\n/**\n * Inject Ruffle into <iframe> and <frame> elements.\n *\n * This polyfill isn't fool-proof either: On self-hosted builds, it may\n * not work due to browsers CORS policy or be loaded too late for some\n * libraries like SWFObject. These should be less of a problem on the\n * web extension. This polyfill should, however, do the trick in most\n * cases, but users should be aware of its natural limits.\n */\nlet iframes;\nlet frames;\n/**\n *\n */\nfunction polyfillFrames() {\n    // Create live collections to track embed tags.\n    iframes = iframes !== null && iframes !== void 0 ? iframes : document.getElementsByTagName(\"iframe\");\n    frames = frames !== null && frames !== void 0 ? frames : document.getElementsByTagName(\"frame\");\n    [iframes, frames].forEach((elements) => {\n        for (const element of elements) {\n            if (element.dataset[\"rufflePolyfilled\"] !== undefined) {\n                // Don't re-polyfill elements with the \"data-ruffle-polyfilled\" attribute.\n                continue;\n            }\n            element.dataset[\"rufflePolyfilled\"] = \"\";\n            const elementWindow = element.contentWindow;\n            // Cross origin requests may reach an exception, so let's prepare for this eventuality.\n            const errorMessage = `Couldn't load Ruffle into ${element.tagName}[${element.src}]: `;\n            try {\n                if (elementWindow.document.readyState === \"complete\") {\n                    injectRuffle(elementWindow, errorMessage);\n                }\n            }\n            catch (err) {\n                if (!isExtension) {\n                    // The web extension should be able to load Ruffle into cross origin frames\n                    // because it has \"all_frames\" set to true in its manifest.json: RufflePlayer\n                    // config won't be injected but it's not worth showing an error.\n                    console.warn(errorMessage + err);\n                }\n            }\n            // Attach listener to the element to handle frame navigation.\n            element.addEventListener(\"load\", () => {\n                injectRuffle(elementWindow, errorMessage);\n            }, false);\n        }\n    });\n}\n/**\n * @param elementWindow The (i)frame's window object.\n * @param errorMessage The message to log when Ruffle cannot access the (i)frame's document.\n */\nasync function injectRuffle(elementWindow, errorMessage) {\n    var _a;\n    // The document is supposed to be completely loaded when this function is run.\n    // As Chrome may be unable to access the document properties, we have to delay the execution a little bit.\n    await new Promise((resolve) => {\n        window.setTimeout(() => {\n            resolve();\n        }, 100);\n    });\n    let elementDocument;\n    try {\n        elementDocument = elementWindow.document;\n        if (!elementDocument) {\n            // Don't polyfill if the window has no document: the element may have been removed from the parent window.\n            return;\n        }\n    }\n    catch (err) {\n        if (!isExtension) {\n            console.warn(errorMessage + err);\n        }\n        return;\n    }\n    if (!isExtension &&\n        elementDocument.documentElement.dataset[\"ruffleOptout\"] !== undefined) {\n        // Don't polyfill elements with the \"data-ruffle-optout\" attribute.\n        return;\n    }\n    if (!isExtension) {\n        if (!elementWindow.RufflePlayer) {\n            const script = elementDocument.createElement(\"script\");\n            script.setAttribute(\"src\", jsScriptUrl);\n            script.onload = () => {\n                // Inject parent configuration once the script is loaded, preventing it from being ignored.\n                elementWindow.RufflePlayer = {};\n                elementWindow.RufflePlayer.config = globalConfig;\n            };\n            elementDocument.head.appendChild(script);\n        }\n    }\n    else {\n        if (!elementWindow.RufflePlayer) {\n            elementWindow.RufflePlayer = {};\n        }\n        // Merge parent window and frame configurations, will likely be applied too late though.\n        elementWindow.RufflePlayer.config = Object.assign(Object.assign({}, globalConfig), ((_a = elementWindow.RufflePlayer.config) !== null && _a !== void 0 ? _a : {}));\n    }\n}\n/**\n * Listen for changes to the DOM.\n *\n */\nfunction initMutationObserver() {\n    const observer = new MutationObserver(function (mutationsList) {\n        // If any nodes were added, re-run the polyfill to detect any new instances.\n        const nodesAdded = mutationsList.some((mutation) => mutation.addedNodes.length > 0);\n        if (nodesAdded) {\n            polyfillFlashInstances();\n            polyfillFrames();\n        }\n    });\n    observer.observe(document, { childList: true, subtree: true });\n}\n/**\n * Polyfills the detection of Flash plugins in the browser.\n */\nexport function pluginPolyfill() {\n    installPlugin(FLASH_PLUGIN);\n}\n/**\n * Polyfills legacy Flash content on the page.\n *\n * @param isExt Whether or not Ruffle is running as a browser's extension.\n */\nexport function polyfill(isExt) {\n    var _a;\n    isExtension = isExt;\n    const usingExtension = ((_a = navigator.plugins.namedItem(\"Ruffle Extension\")) === null || _a === void 0 ? void 0 : _a.filename) ===\n        \"ruffle.js\";\n    if (isExtension || !usingExtension) {\n        polyfillFlashInstances();\n        polyfillFrames();\n        initMutationObserver();\n    }\n}\n","/**\n * Create a filename to save a downloaded SWF into.\n *\n * @param swfUrl The URL of the SWF file.\n * @returns The filename the SWF file can be saved at.\n */\nexport function swfFileName(swfUrl) {\n    const pathName = swfUrl.pathname;\n    const name = pathName.substring(pathName.lastIndexOf(\"/\") + 1);\n    return name;\n}\n","import { isBuiltInContextMenuVisible, isFallbackElement, isScriptAccessAllowed, isSwfFilename, isSwfMimeType, isYoutubeFlashSource, workaroundYoutubeMixedContent, RufflePlayer, } from \"./ruffle-player\";\nimport { WindowMode } from \"./load-options\";\nimport { registerElement } from \"./register-element\";\n/**\n * A polyfill html element.\n *\n * This specific class tries to polyfill existing `<embed>` tags,\n * and should not be used. Prefer [[RufflePlayer]] instead.\n *\n * @internal\n */\nexport class RuffleEmbed extends RufflePlayer {\n    /**\n     * Constructs a new Ruffle flash player for insertion onto the page.\n     *\n     * This specific class tries to polyfill existing `<embed>` tags,\n     * and should not be used. Prefer [[RufflePlayer]] instead.\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * @ignore\n     * @internal\n     */\n    connectedCallback() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n        super.connectedCallback();\n        const src = this.attributes.getNamedItem(\"src\");\n        if (src) {\n            const allowScriptAccess = (_b = (_a = this.attributes.getNamedItem(\"allowScriptAccess\")) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null;\n            const menu = (_d = (_c = this.attributes.getNamedItem(\"menu\")) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : null;\n            // Kick off the SWF download.\n            this.load({\n                url: src.value,\n                allowScriptAccess: isScriptAccessAllowed(allowScriptAccess, src.value),\n                parameters: (_f = (_e = this.attributes.getNamedItem(\"flashvars\")) === null || _e === void 0 ? void 0 : _e.value) !== null && _f !== void 0 ? _f : null,\n                backgroundColor: (_h = (_g = this.attributes.getNamedItem(\"bgcolor\")) === null || _g === void 0 ? void 0 : _g.value) !== null && _h !== void 0 ? _h : null,\n                base: (_k = (_j = this.attributes.getNamedItem(\"base\")) === null || _j === void 0 ? void 0 : _j.value) !== null && _k !== void 0 ? _k : null,\n                menu: isBuiltInContextMenuVisible(menu),\n                salign: (_m = (_l = this.attributes.getNamedItem(\"salign\")) === null || _l === void 0 ? void 0 : _l.value) !== null && _m !== void 0 ? _m : \"\",\n                quality: (_p = (_o = this.attributes.getNamedItem(\"quality\")) === null || _o === void 0 ? void 0 : _o.value) !== null && _p !== void 0 ? _p : \"high\",\n                scale: (_r = (_q = this.attributes.getNamedItem(\"scale\")) === null || _q === void 0 ? void 0 : _q.value) !== null && _r !== void 0 ? _r : \"showAll\",\n                wmode: (_t = (_s = this.attributes.getNamedItem(\"wmode\")) === null || _s === void 0 ? void 0 : _s.value) !== null && _t !== void 0 ? _t : WindowMode.Window,\n            });\n        }\n    }\n    /**\n     * Polyfill of HTMLObjectElement.\n     *\n     * @ignore\n     * @internal\n     */\n    get src() {\n        var _a;\n        return (_a = this.attributes.getNamedItem(\"src\")) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    /**\n     * Polyfill of HTMLObjectElement.\n     *\n     * @ignore\n     * @internal\n     */\n    set src(srcval) {\n        if (srcval) {\n            const attr = document.createAttribute(\"src\");\n            attr.value = srcval;\n            this.attributes.setNamedItem(attr);\n        }\n        else {\n            this.attributes.removeNamedItem(\"src\");\n        }\n    }\n    /**\n     * @ignore\n     * @internal\n     */\n    static get observedAttributes() {\n        return [\"src\", \"width\", \"height\"];\n    }\n    /**\n     * @ignore\n     * @internal\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        var _a, _b, _c, _d;\n        super.attributeChangedCallback(name, oldValue, newValue);\n        if (this.isConnected && name === \"src\") {\n            const src = this.attributes.getNamedItem(\"src\");\n            if (src) {\n                this.load({\n                    url: src.value,\n                    parameters: (_b = (_a = this.attributes.getNamedItem(\"flashvars\")) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : null,\n                    base: (_d = (_c = this.attributes.getNamedItem(\"base\")) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : null,\n                });\n            }\n        }\n    }\n    /**\n     * Checks if the given element may be polyfilled with this one.\n     *\n     * @param elem Element to check.\n     * @returns True if the element looks like a flash embed.\n     */\n    static isInterdictable(elem) {\n        // Don't polyfill if the element is inside a specific node.\n        if (isFallbackElement(elem)) {\n            return false;\n        }\n        // Don't polyfill when no file is specified.\n        if (!elem.getAttribute(\"src\")) {\n            return false;\n        }\n        // Don't polyfill when the file is a Youtube Flash source.\n        if (isYoutubeFlashSource(elem.getAttribute(\"src\"))) {\n            // Workaround YouTube mixed content; this isn't what browsers do automatically, but while we're here, we may as well\n            workaroundYoutubeMixedContent(elem, \"src\");\n            return false;\n        }\n        // Check for MIME type.\n        const type = elem.getAttribute(\"type\");\n        if (!type) {\n            // If no MIME type is specified, polyfill if movie is an SWF file.\n            return isSwfFilename(elem.getAttribute(\"src\"));\n        }\n        else {\n            return isSwfMimeType(type);\n        }\n    }\n    /**\n     * Creates a RuffleEmbed that will polyfill and replace the given element.\n     *\n     * @param elem Element to replace.\n     * @returns Created RuffleEmbed.\n     */\n    static fromNativeEmbedElement(elem) {\n        const externalName = registerElement(\"ruffle-embed\", RuffleEmbed);\n        const ruffleObj = document.createElement(externalName);\n        ruffleObj.copyElement(elem);\n        return ruffleObj;\n    }\n}\n","import { isBuiltInContextMenuVisible, isFallbackElement, isScriptAccessAllowed, isSwfFilename, isSwfMimeType, isYoutubeFlashSource, workaroundYoutubeMixedContent, RufflePlayer, } from \"./ruffle-player\";\nimport { FLASH_ACTIVEX_CLASSID } from \"./flash-identifiers\";\nimport { registerElement } from \"./register-element\";\nimport { RuffleEmbed } from \"./ruffle-embed\";\n/**\n * Find and return the first value in obj with the given key.\n * Many Flash params were case insensitive, so we use this when checking for them.\n *\n * @param obj Object to check\n * @param key Key to find\n * @param defaultValue Value if not found\n * @returns Value if found, else [[defaultValue]]\n */\nfunction findCaseInsensitive(obj, key, defaultValue) {\n    key = key.toLowerCase();\n    for (const [k, value] of Object.entries(obj)) {\n        if (k.toLowerCase() === key) {\n            return value;\n        }\n    }\n    return defaultValue;\n}\n/**\n * Returns all flash params ([[HTMLParamElement]]) that are for the given object.\n *\n * @param elem Element to check.\n * @returns A record of every parameter.\n */\nfunction paramsOf(elem) {\n    var _a, _b;\n    const params = {};\n    for (const param of elem.children) {\n        if (param instanceof HTMLParamElement) {\n            const key = (_a = param.attributes.getNamedItem(\"name\")) === null || _a === void 0 ? void 0 : _a.value;\n            const value = (_b = param.attributes.getNamedItem(\"value\")) === null || _b === void 0 ? void 0 : _b.value;\n            if (key && value) {\n                params[key] = value;\n            }\n        }\n    }\n    return params;\n}\n/**\n * A polyfill html element.\n *\n * This specific class tries to polyfill existing `<object>` tags,\n * and should not be used. Prefer [[RufflePlayer]] instead.\n *\n * @internal\n */\nexport class RuffleObject extends RufflePlayer {\n    /**\n     * Constructs a new Ruffle flash player for insertion onto the page.\n     *\n     * This specific class tries to polyfill existing `<object>` tags,\n     * and should not be used. Prefer [[RufflePlayer]] instead.\n     */\n    constructor() {\n        super();\n        this.params = {};\n    }\n    /**\n     * @ignore\n     * @internal\n     */\n    connectedCallback() {\n        var _a;\n        super.connectedCallback();\n        this.params = paramsOf(this);\n        let url = null;\n        if (this.attributes.getNamedItem(\"data\")) {\n            url = (_a = this.attributes.getNamedItem(\"data\")) === null || _a === void 0 ? void 0 : _a.value;\n        }\n        else if (this.params[\"movie\"]) {\n            url = this.params[\"movie\"];\n        }\n        const allowScriptAccess = findCaseInsensitive(this.params, \"allowScriptAccess\", null);\n        const parameters = findCaseInsensitive(this.params, \"flashvars\", this.getAttribute(\"flashvars\"));\n        const backgroundColor = findCaseInsensitive(this.params, \"bgcolor\", this.getAttribute(\"bgcolor\"));\n        const base = findCaseInsensitive(this.params, \"base\", this.getAttribute(\"base\"));\n        const menu = findCaseInsensitive(this.params, \"menu\", null);\n        const salign = findCaseInsensitive(this.params, \"salign\", \"\");\n        const quality = findCaseInsensitive(this.params, \"quality\", \"high\");\n        const scale = findCaseInsensitive(this.params, \"scale\", \"showAll\");\n        const wmode = findCaseInsensitive(this.params, \"wmode\", \"window\");\n        if (url) {\n            const options = { url };\n            options.allowScriptAccess = isScriptAccessAllowed(allowScriptAccess, url);\n            if (parameters) {\n                options.parameters = parameters;\n            }\n            if (backgroundColor) {\n                options.backgroundColor = backgroundColor;\n            }\n            if (base) {\n                options.base = base;\n            }\n            options.menu = isBuiltInContextMenuVisible(menu);\n            if (salign) {\n                options.salign = salign;\n            }\n            if (quality) {\n                options.quality = quality;\n            }\n            if (scale) {\n                options.scale = scale;\n            }\n            if (wmode) {\n                options.wmode = wmode;\n            }\n            // Kick off the SWF download.\n            this.load(options);\n        }\n    }\n    debugPlayerInfo() {\n        var _a;\n        let errorText = super.debugPlayerInfo();\n        errorText += \"Player type: Object\\n\";\n        let url = null;\n        if (this.attributes.getNamedItem(\"data\")) {\n            url = (_a = this.attributes.getNamedItem(\"data\")) === null || _a === void 0 ? void 0 : _a.value;\n        }\n        else if (this.params[\"movie\"]) {\n            url = this.params[\"movie\"];\n        }\n        errorText += `SWF URL: ${url}\\n`;\n        Object.keys(this.params).forEach((key) => {\n            errorText += `Param ${key}: ${this.params[key]}\\n`;\n        });\n        Object.keys(this.attributes).forEach((key) => {\n            var _a;\n            errorText += `Attribute ${key}: ${(_a = this.attributes.getNamedItem(key)) === null || _a === void 0 ? void 0 : _a.value}\\n`;\n        });\n        return errorText;\n    }\n    /**\n     * Polyfill of HTMLObjectElement.\n     *\n     * @ignore\n     * @internal\n     */\n    get data() {\n        return this.getAttribute(\"data\");\n    }\n    /**\n     * Polyfill of HTMLObjectElement.\n     *\n     * @ignore\n     * @internal\n     */\n    set data(href) {\n        if (href) {\n            const attr = document.createAttribute(\"data\");\n            attr.value = href;\n            this.attributes.setNamedItem(attr);\n        }\n        else {\n            this.attributes.removeNamedItem(\"data\");\n        }\n    }\n    /**\n     * Checks if the given element may be polyfilled with this one.\n     *\n     * @param elem Element to check.\n     * @returns True if the element looks like a flash object.\n     */\n    static isInterdictable(elem) {\n        var _a, _b;\n        // Don't polyfill if the element is inside a specific node.\n        if (isFallbackElement(elem)) {\n            return false;\n        }\n        // Don't polyfill if there's already a <ruffle-object> or a <ruffle-embed> inside the <object>.\n        if (elem.getElementsByTagName(\"ruffle-object\").length > 0 ||\n            elem.getElementsByTagName(\"ruffle-embed\").length > 0) {\n            return false;\n        }\n        // Don't polyfill if no movie specified.\n        const data = (_a = elem.attributes.getNamedItem(\"data\")) === null || _a === void 0 ? void 0 : _a.value.toLowerCase();\n        const params = paramsOf(elem);\n        let isSwf;\n        // Check for SWF file.\n        if (data) {\n            // Don't polyfill when the file is a Youtube Flash source.\n            if (isYoutubeFlashSource(data)) {\n                // Workaround YouTube mixed content; this isn't what browsers do automatically, but while we're here, we may as well\n                workaroundYoutubeMixedContent(elem, \"data\");\n                return false;\n            }\n            isSwf = isSwfFilename(data);\n        }\n        else if (params && params[\"movie\"]) {\n            // Don't polyfill when the file is a Youtube Flash source.\n            if (isYoutubeFlashSource(params[\"movie\"])) {\n                // Workaround YouTube mixed content; this isn't what browsers do automatically, but while we're here, we may as well\n                const movie_elem = elem.querySelector(\"param[name='movie']\");\n                if (movie_elem) {\n                    workaroundYoutubeMixedContent(movie_elem, \"value\");\n                    // The data attribute needs to be set for the re-fetch to happen\n                    // It also needs to be set on Firefox for the YouTube object rewrite to work, regardless of mixed content\n                    const movie_src = movie_elem.getAttribute(\"value\");\n                    if (movie_src) {\n                        elem.setAttribute(\"data\", movie_src);\n                    }\n                }\n                return false;\n            }\n            isSwf = isSwfFilename(params[\"movie\"]);\n        }\n        else {\n            // Don't polyfill when no file is specified.\n            return false;\n        }\n        // Check ActiveX class ID.\n        const classid = (_b = elem.attributes\n            .getNamedItem(\"classid\")) === null || _b === void 0 ? void 0 : _b.value.toLowerCase();\n        if (classid === FLASH_ACTIVEX_CLASSID.toLowerCase()) {\n            // classid is an old-IE style embed that would not work on modern browsers.\n            // Often there will be an <embed> inside the <object> that would take precedence.\n            // Only polyfill this <object> if it doesn't contain a polyfillable <embed> or\n            // another <object> that would be supported on modern browsers.\n            return (!Array.from(elem.getElementsByTagName(\"object\")).some(RuffleObject.isInterdictable) &&\n                !Array.from(elem.getElementsByTagName(\"embed\")).some(RuffleEmbed.isInterdictable));\n        }\n        else if (classid) {\n            // Non-Flash classid.\n            return false;\n        }\n        // Check for MIME type.\n        const type = elem.attributes.getNamedItem(\"type\");\n        if (!type) {\n            // If no MIME type is specified, polyfill if movie is an SWF file.\n            return isSwf;\n        }\n        else {\n            return isSwfMimeType(type.value);\n        }\n    }\n    /**\n     * Creates a RuffleObject that will polyfill and replace the given element.\n     *\n     * @param elem Element to replace.\n     * @returns Created RuffleObject.\n     */\n    static fromNativeObjectElement(elem) {\n        const externalName = registerElement(\"ruffle-object\", RuffleObject);\n        const ruffleObj = (document.createElement(externalName));\n        // Avoid copying embeds-inside-objects to avoid double polyfilling.\n        for (const embedElem of Array.from(elem.getElementsByTagName(\"embed\"))) {\n            if (RuffleEmbed.isInterdictable(embedElem)) {\n                embedElem.remove();\n            }\n        }\n        // Avoid copying objects-inside-objects to avoid double polyfilling.\n        // This may happen when Internet Explorer's conditional comments are used.\n        for (const objectElem of Array.from(elem.getElementsByTagName(\"object\"))) {\n            if (RuffleObject.isInterdictable(objectElem)) {\n                objectElem.remove();\n            }\n        }\n        ruffleObj.copyElement(elem);\n        return ruffleObj;\n    }\n}\n","/**\n * A representation of a semver 2 compliant version string\n */\nexport class Version {\n    /**\n     * Construct a Version from specific components.\n     *\n     * If you wish to parse a string into a Version then please use [[fromSemver]].\n     *\n     * @param major The major version component.\n     * @param minor The minor version component.\n     * @param patch The patch version component.\n     * @param prIdent A list of pre-release identifiers, if any\n     * @param buildIdent A list of build identifiers, if any\n     */\n    constructor(major, minor, patch, prIdent, \n    // @ts-expect-error: Property 'buildIdent' is declared but its value is never read.\n    buildIdent) {\n        this.major = major;\n        this.minor = minor;\n        this.patch = patch;\n        this.prIdent = prIdent;\n        this.buildIdent = buildIdent;\n    }\n    /**\n     * Construct a version from a semver 2 compliant string.\n     *\n     * This function is intended for use with semver 2 compliant strings.\n     * Malformed strings may still parse correctly, but this result is not\n     * guaranteed.\n     *\n     * @param versionString A semver 2.0.0 compliant version string\n     * @returns A version object\n     */\n    static fromSemver(versionString) {\n        const buildSplit = versionString.split(\"+\"), prSplit = buildSplit[0].split(\"-\"), versionSplit = prSplit[0].split(\".\");\n        const major = parseInt(versionSplit[0], 10);\n        let minor = 0;\n        let patch = 0;\n        let prIdent = null;\n        let buildIdent = null;\n        if (versionSplit[1] !== undefined) {\n            minor = parseInt(versionSplit[1], 10);\n        }\n        if (versionSplit[2] !== undefined) {\n            patch = parseInt(versionSplit[2], 10);\n        }\n        if (prSplit[1] !== undefined) {\n            prIdent = prSplit[1].split(\".\");\n        }\n        if (buildSplit[1] !== undefined) {\n            buildIdent = buildSplit[1].split(\".\");\n        }\n        return new Version(major, minor, patch, prIdent, buildIdent);\n    }\n    /**\n     * Returns true if a given version is compatible with this one.\n     *\n     * Compatibility is defined as having the same nonzero major version\n     * number, or if both major versions are zero, the same nonzero minor\n     * version number, or if both minor versions are zero, the same nonzero\n     * patch version number.\n     *\n     * This implements the ^ operator in npm's semver package, with the\n     * exception of the prerelease exclusion rule.\n     *\n     * @param other The other version to test against\n     * @returns True if compatible\n     */\n    isCompatibleWith(other) {\n        return ((this.major !== 0 && this.major === other.major) ||\n            (this.major === 0 &&\n                other.major === 0 &&\n                this.minor !== 0 &&\n                this.minor === other.minor) ||\n            (this.major === 0 &&\n                other.major === 0 &&\n                this.minor === 0 &&\n                other.minor === 0 &&\n                this.patch !== 0 &&\n                this.patch === other.patch));\n    }\n    /**\n     * Returns true if this version has precedence over (is newer than) another\n     * version.\n     *\n     * Precedence is defined as in the Semver 2 spec. This implements the >\n     * operator in npm's semver package, with the exception of the prerelease\n     * exclusion rule.\n     *\n     * @param other The other version to test against\n     * @returns True if this version has precedence over the other one\n     */\n    hasPrecedenceOver(other) {\n        if (this.major > other.major) {\n            return true;\n        }\n        else if (this.major < other.major) {\n            return false;\n        }\n        if (this.minor > other.minor) {\n            return true;\n        }\n        else if (this.minor < other.minor) {\n            return false;\n        }\n        if (this.patch > other.patch) {\n            return true;\n        }\n        else if (this.patch < other.patch) {\n            return false;\n        }\n        if (this.prIdent === null && other.prIdent !== null) {\n            return true;\n        }\n        else if (this.prIdent !== null && other.prIdent !== null) {\n            const isNumeric = /^[0-9]*$/;\n            for (let i = 0; i < this.prIdent.length && i < other.prIdent.length; i += 1) {\n                if (!isNumeric.test(this.prIdent[i]) &&\n                    isNumeric.test(other.prIdent[i])) {\n                    return true;\n                }\n                else if (isNumeric.test(this.prIdent[i]) &&\n                    isNumeric.test(other.prIdent[i])) {\n                    if (parseInt(this.prIdent[i], 10) >\n                        parseInt(other.prIdent[i], 10)) {\n                        return true;\n                    }\n                    else if (parseInt(this.prIdent[i], 10) <\n                        parseInt(other.prIdent[i], 10)) {\n                        return false;\n                    }\n                }\n                else if (isNumeric.test(this.prIdent[i]) &&\n                    !isNumeric.test(other.prIdent[i])) {\n                    return false;\n                }\n                else if (!isNumeric.test(this.prIdent[i]) &&\n                    !isNumeric.test(other.prIdent[i])) {\n                    if (this.prIdent[i] > other.prIdent[i]) {\n                        return true;\n                    }\n                    else if (this.prIdent[i] < other.prIdent[i]) {\n                        return false;\n                    }\n                }\n            }\n            return this.prIdent.length > other.prIdent.length;\n        }\n        return false;\n    }\n    /**\n     * Tests if a given version is equivalent to this one.\n     *\n     * Build and prerelease tags are ignored.\n     *\n     * @param other The other version to test against\n     * @returns True if the given version is equivalent\n     */\n    isEqual(other) {\n        return (this.major === other.major &&\n            this.minor === other.minor &&\n            this.patch === other.patch);\n    }\n    /**\n     * Tests if a given version is stable or a compatible prerelease for this\n     * version.\n     *\n     * This implements the prerelease exclusion rule of NPM semver: a\n     * prerelease version can only pass this check if the major/minor/patch\n     * components of both versions are the same. Otherwise, the prerelease\n     * version always fails.\n     *\n     * @param other The other version to test against\n     * @returns True if the given version is either stable, or a\n     * prerelease in the same series as this one.\n     */\n    isStableOrCompatiblePrerelease(other) {\n        if (other.prIdent === null) {\n            return true;\n        }\n        else {\n            return (this.major === other.major &&\n                this.minor === other.minor &&\n                this.patch === other.patch);\n        }\n    }\n}\n","import { Version } from \"./version\";\n/**\n * Represents a set of version requirements.\n */\nexport class VersionRange {\n    /**\n     * Constructs a range of versions as specified by the given requirements.\n     *\n     * If you wish to construct this object from a string representation,\n     * then use [[fromRequirementString]].\n     *\n     * @param requirements Requirements to set this range by\n     */\n    constructor(requirements) {\n        this.requirements = requirements;\n    }\n    /**\n     * Determine if a given version satisfies this range.\n     *\n     * @param fver A version object to test against.\n     * @returns Whether or not the given version matches this range\n     */\n    satisfiedBy(fver) {\n        for (const requirement of this.requirements) {\n            let matches = true;\n            for (const { comparator, version } of requirement) {\n                matches =\n                    matches && version.isStableOrCompatiblePrerelease(fver);\n                if (comparator === \"\" || comparator === \"=\") {\n                    matches = matches && version.isEqual(fver);\n                }\n                else if (comparator === \">\") {\n                    matches = matches && fver.hasPrecedenceOver(version);\n                }\n                else if (comparator === \">=\") {\n                    matches =\n                        matches &&\n                            (fver.hasPrecedenceOver(version) ||\n                                version.isEqual(fver));\n                }\n                else if (comparator === \"<\") {\n                    matches = matches && version.hasPrecedenceOver(fver);\n                }\n                else if (comparator === \"<=\") {\n                    matches =\n                        matches &&\n                            (version.hasPrecedenceOver(fver) ||\n                                version.isEqual(fver));\n                }\n                else if (comparator === \"^\") {\n                    matches = matches && version.isCompatibleWith(fver);\n                }\n            }\n            if (matches) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Parse a requirement string into a version range.\n     *\n     * @param requirement The version requirements, consisting of a\n     * series of space-separated strings, each one being a semver version\n     * optionally prefixed by a comparator or a separator.\n     *\n     * Valid comparators are:\n     * - `\"\"` or `\"=\"`: Precisely this version\n     * - `\">`\": A version newer than this one\n     * - `\">`=\": A version newer or equal to this one\n     * - `\"<\"`: A version older than this one\n     * - `\"<=\"`: A version older or equal to this one\n     * - `\"^\"`: A version that is compatible with this one\n     *\n     * A separator is `\"||`\" which splits the requirement string into\n     * left OR right.\n     * @returns A version range object.\n     */\n    static fromRequirementString(requirement) {\n        const components = requirement.split(\" \");\n        let set = [];\n        const requirements = [];\n        for (const component of components) {\n            if (component === \"||\") {\n                if (set.length > 0) {\n                    requirements.push(set);\n                    set = [];\n                }\n            }\n            else if (component.length > 0) {\n                const match = /[0-9]/.exec(component);\n                if (match) {\n                    const comparator = component.slice(0, match.index).trim();\n                    const version = Version.fromSemver(component.slice(match.index).trim());\n                    set.push({ comparator, version });\n                }\n            }\n        }\n        if (set.length > 0) {\n            requirements.push(set);\n        }\n        return new VersionRange(requirements);\n    }\n}\n","import { pluginPolyfill, polyfill } from \"./polyfills\";\nimport { registerElement } from \"./register-element\";\nimport { RufflePlayer } from \"./ruffle-player\";\nimport { buildInfo } from \"./build-info\";\n/**\n * Represents this particular version of Ruffle.\n *\n * Multiple APIs can be instantiated from different sources; e.g. an \"extension\"\n * version, versus a \"local\" version. This expresses to the Public API\n * negotiator (see [[PublicAPI]]) what this particular version of Ruffle is and\n * how to control it.\n */\nexport const SourceAPI = {\n    /**\n     * The version of this particular API, as a string in a semver compatible format.\n     */\n    version: buildInfo.versionNumber,\n    /**\n     * Start up the polyfills.\n     *\n     * Do not run polyfills for more than one Ruffle source at a time.\n     *\n     * @param isExt Whether or not Ruffle is running as a browser's extension.\n     */\n    polyfill(isExt) {\n        polyfill(isExt);\n    },\n    /**\n     * Polyfill the plugin detection.\n     *\n     * This needs to run before any plugin detection script does.\n     */\n    pluginPolyfill() {\n        pluginPolyfill();\n    },\n    /**\n     * Create a Ruffle player element using this particular version of Ruffle.\n     *\n     * @returns The player element. This is a DOM element that may be inserted\n     * into the current page as you wish.\n     */\n    createPlayer() {\n        const name = registerElement(\"ruffle-player\", RufflePlayer);\n        return document.createElement(name);\n    },\n};\n","import { Version } from \"./version\";\nimport { VersionRange } from \"./version-range\";\nimport { SourceAPI } from \"./source-api\";\n/**\n * Represents the Ruffle public API.\n *\n * The public API exists primarily to allow multiple installs of Ruffle on a\n * page (e.g. an extension install and a local one) to cooperate. In an ideal\n * situation, all Ruffle sources on the page install themselves into a single\n * public API, and then the public API picks the newest version by default.\n *\n * This API *is* versioned, in case we need to upgrade it. However, it must be\n * backwards- and forwards-compatible with all known sources.\n */\nexport class PublicAPI {\n    /**\n     * Construct the Ruffle public API.\n     *\n     * Do not use this function to negotiate a public API. Instead, use\n     * `public_api` to register your Ruffle source with an existing public API\n     * if it exists.\n     *\n     * Constructing a Public API will also trigger it to initialize Ruffle once\n     * the page loads, if the API has not already been superseded.\n     *\n     * @param prev What used to be in the public API slot.\n     *\n     * This is used to upgrade from a prior version of the public API, or from\n     * a user-defined configuration object placed in the public API slot.\n     * @protected\n     */\n    constructor(prev) {\n        this.sources = {};\n        this.config = {};\n        this.invoked = false;\n        this.newestName = null;\n        this.conflict = null;\n        if (prev !== undefined && prev !== null) {\n            if (prev instanceof PublicAPI) {\n                // We're upgrading from a previous API to a new one.\n                this.sources = prev.sources;\n                this.config = prev.config;\n                this.invoked = prev.invoked;\n                this.conflict = prev.conflict;\n                this.newestName = prev.newestName;\n                prev.superseded();\n            }\n            else if (prev.constructor === Object &&\n                prev[\"config\"] instanceof Object) {\n                // We're the first, install user configuration.\n                this.config = prev[\"config\"];\n            }\n            else {\n                // We're the first, but conflicting with someone else.\n                this.conflict = prev;\n            }\n        }\n        if (document.readyState === \"loading\") {\n            // Cloudflare Rocket Loader interferes with the DOMContentLoaded event,\n            // so we listen for readystatechange instead\n            document.addEventListener(\"readystatechange\", this.init.bind(this));\n        }\n        else {\n            window.setTimeout(this.init.bind(this), 0);\n        }\n    }\n    /**\n     * The version of the public API.\n     *\n     * This is *not* the version of Ruffle itself.\n     *\n     * This allows a page with an old version of the Public API to be upgraded\n     * to a new version of the API. The public API is intended to be changed\n     * very infrequently, if at all, but this provides an escape mechanism for\n     * newer Ruffle sources to upgrade older installations.\n     *\n     * @returns The version of this public API.\n     */\n    get version() {\n        return \"0.1.0\";\n    }\n    /**\n     * Register a given source with the Ruffle Public API.\n     *\n     * @param name The name of the source.\n     */\n    registerSource(name) {\n        this.sources[name] = SourceAPI;\n    }\n    /**\n     * Determine the name of the newest registered source in the Public API.\n     *\n     * @returns The name of the source, or `null` if no source\n     * has yet to be registered.\n     */\n    newestSourceName() {\n        let newestName = null, newestVersion = Version.fromSemver(\"0.0.0\");\n        for (const k in this.sources) {\n            if (Object.prototype.hasOwnProperty.call(this.sources, k)) {\n                const kVersion = Version.fromSemver(this.sources[k].version);\n                if (kVersion.hasPrecedenceOver(newestVersion)) {\n                    newestName = k;\n                    newestVersion = kVersion;\n                }\n            }\n        }\n        return newestName;\n    }\n    /**\n     * Negotiate and start Ruffle.\n     *\n     * This function reads the config parameter to determine which polyfills\n     * should be enabled. If the configuration parameter is missing, then we\n     * use a built-in set of defaults sufficient to fool sites with static\n     * content and weak plugin detection.\n     */\n    init() {\n        if (!this.invoked) {\n            this.invoked = true;\n            this.newestName = this.newestSourceName();\n            if (this.newestName === null) {\n                throw new Error(\"No registered Ruffle source!\");\n            }\n            const polyfills = \"polyfills\" in this.config ? this.config.polyfills : true;\n            if (polyfills !== false) {\n                this.sources[this.newestName].polyfill(this.newestName === \"extension\");\n            }\n        }\n    }\n    /**\n     * Look up the newest Ruffle source and return it's API.\n     *\n     * @returns An instance of the Source API.\n     */\n    newest() {\n        const name = this.newestSourceName();\n        return name !== null ? this.sources[name] : null;\n    }\n    /**\n     * Look up a specific Ruffle version (or any version satisfying a given set\n     * of requirements) and return it's API.\n     *\n     * @param ver_requirement A set of semantic version requirement\n     * strings that the player version must satisfy.\n     * @returns An instance of the Source API, if one or more\n     * sources satisfied the requirement.\n     */\n    satisfying(ver_requirement) {\n        const requirement = VersionRange.fromRequirementString(ver_requirement);\n        let valid = null;\n        for (const k in this.sources) {\n            if (Object.prototype.hasOwnProperty.call(this.sources, k)) {\n                const version = Version.fromSemver(this.sources[k].version);\n                if (requirement.satisfiedBy(version)) {\n                    valid = this.sources[k];\n                }\n            }\n        }\n        return valid;\n    }\n    /**\n     * Look up the newest Ruffle version compatible with the `local` source, if\n     * it's installed. Otherwise, use the latest version.\n     *\n     * @returns An instance of the Source API\n     */\n    localCompatible() {\n        if (this.sources[\"local\"] !== undefined) {\n            return this.satisfying(\"^\" + this.sources[\"local\"].version);\n        }\n        else {\n            return this.newest();\n        }\n    }\n    /**\n     * Look up the newest Ruffle version with the exact same version as the\n     * `local` source, if it's installed. Otherwise, use the latest version.\n     *\n     * @returns An instance of the Source API\n     */\n    local() {\n        if (this.sources[\"local\"] !== undefined) {\n            return this.satisfying(\"=\" + this.sources[\"local\"].version);\n        }\n        else {\n            return this.newest();\n        }\n    }\n    /**\n     * Indicates that this version of the public API has been superseded by a\n     * newer version.\n     *\n     * This should only be called by a newer version of the Public API.\n     * Identical versions of the Public API should not supersede older versions\n     * of that same API.\n     *\n     * Unfortunately, we can't disable polyfills after-the-fact, so this\n     * only lets you disable the init event...\n     *\n     * @protected\n     */\n    superseded() {\n        this.invoked = true;\n    }\n    /**\n     * Join a source into the public API, if it doesn't already exist.\n     *\n     * @param prevRuffle The previous iteration of the Ruffle API.\n     *\n     * The `prevRuffle` param lists the previous object in the RufflePlayer\n     * slot. We perform some checks to see if this is a Ruffle public API or a\n     * conflicting object. If this is conflicting, then a new public API will\n     * be constructed (see the constructor information for what happens to\n     * `prevRuffle`).\n     *\n     * Note that Public API upgrades are deliberately not enabled in this\n     * version of Ruffle, since there is no Public API to upgrade from.\n     * @param sourceName The name of this particular\n     * Ruffle source.\n     *\n     * If both parameters are provided they will be used to define a new Ruffle\n     * source to register with the public API.\n     * @returns The Ruffle Public API.\n     */\n    static negotiate(prevRuffle, sourceName) {\n        let publicAPI;\n        if (prevRuffle instanceof PublicAPI) {\n            publicAPI = prevRuffle;\n        }\n        else {\n            publicAPI = new PublicAPI(prevRuffle);\n        }\n        if (sourceName !== undefined) {\n            publicAPI.registerSource(sourceName);\n            // Install the faux plugin detection immediately.\n            // This is necessary because scripts such as SWFObject check for the\n            // Flash Player immediately when they load.\n            // TODO: Maybe there's a better place for this.\n            const polyfills = \"polyfills\" in publicAPI.config\n                ? publicAPI.config.polyfills\n                : true;\n            if (polyfills !== false) {\n                SourceAPI.pluginPolyfill();\n            }\n        }\n        return publicAPI;\n    }\n}\n","import { PublicAPI } from \"ruffle-core\";\n\nwindow.RufflePlayer = PublicAPI.negotiate(window.RufflePlayer, \"local\");\n"],"names":["inProgress","dataWebpackPrefix","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","f","e","chunkId","Promise","all","keys","reduce","promises","u","g","globalThis","this","Function","window","hmd","create","children","set","Error","obj","prop","prototype","hasOwnProperty","call","l","url","done","push","script","needAttach","scripts","document","getElementsByTagName","i","length","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","fn","setTimeout","bind","type","target","head","appendChild","r","Symbol","toStringTag","value","p","b","baseURI","self","location","href","installedChunks","j","installedChunkData","promise","resolve","reject","error","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","bulkMemory","async","WebAssembly","validate","Uint8Array","referenceTypes","saturatedFloatToInt","signExtensions","simd","isNativeFunction","func","val","toString","indexOf","currentScriptURL","currentScript","endsWith","URL","console","warn","publicPath","config","path","lastLoaded","loadRuffle","progressCallback","Array","args","Prototype","Version","callback","TypeError","len","k","Window","constructor","Reflect","has","ownKeys","getOwnPropertyNames","getOwnPropertySymbols","extensionsSupported","every","Boolean","log","default","init","Ruffle","response","wasmUrl","wasmResponse","fetch","contentLength","headers","bytesLoaded","bytesTotal","parseInt","Response","ReadableStream","controller","_a","reader","body","getReader","read","byteLength","enqueue","close","fetchRuffle","FLASH_MIMETYPE","FUTURESPLASH_MIMETYPE","FLASH7_AND_8_MIMETYPE","FLASH_MOVIE_MIMETYPE","RuffleMimeTypeArray","mimeTypes","__mimeTypes","__namedMimeTypes","install","mimeType","index","item","namedItem","iterator","RufflePlugin","description","filename","super","RufflePluginArray","plugins","__plugins","__namedPlugins","plugin","refresh","FLASH_PLUGIN","suffixes","enabledPlugin","ruffleShadowTemplate","innerHTML","privateRegistry","registerElement","elementName","elementClass","registration","class","tries","customElements","externalName","define","internalName","AutoPlay","Letterbox","UnmuteOverlay","LogLevel","WindowMode","DEFAULT_CONFIG","allowScriptAccess","parameters","autoplay","Auto","backgroundColor","letterbox","Fullscreen","unmuteOverlay","Visible","upgradeToHttps","compatibilityRules","warnOnUnsupportedContent","logLevel","showSwfDownload","contextMenu","preloader","splashScreen","maxExecutionDuration","secs","nanos","base","menu","salign","quality","scale","forceScale","wmode","Opaque","polyfills","playerVersion","buildInfo","RUFFLE_ORIGIN","DIMENSION_REGEX","isAudioContextUnmuted","PanicError","ReadyState","_b","sanitizeParameters","URLSearchParams","output","RufflePlayer","HTMLElement","readyState","_readyState","metadata","_metadata","contextMenuForceDisabled","isTouch","contextMenuSupported","panicked","_cachedDebugInfo","isExtension","longPressTimer","shadow","attachShadow","mode","content","cloneNode","dynamicStyles","getElementById","container","playButton","addEventListener","play","virtualKeyboard","virtualKeyboardInput","saveManager","modalArea","querySelector","stopPropagation","closeSaveManager","backupSaves","contextMenuElement","pointerDown","showContextMenu","startLongPressTimer","checkLongPress","clearLongPressTimer","fullScreenChange","instance","onFSCommand","HaveNothing","lastActivePlayingState","setupPauseOnTabHidden","hidden","is_playing","pause","connectedCallback","updateStyles","observedAttributes","attributeChangedCallback","_oldValue","_newValue","disconnectedCallback","destroy","sheet","rules","deleteRule","widthAttr","attributes","getNamedItem","width","htmlDimensionToCssDimension","insertRule","heightAttr","height","isUnusedFallbackObject","element","lookupElement","parent","nodeName","loadedConfig","showSplashScreen","ruffleConstructor","onRuffleDownloadProgress","catch","protocol","ruffleIndexError","FileProtocol","WasmNotFound","String","toLowerCase","includes","WasmMimeType","WasmCors","CSPConflict","InvalidWasm","WasmDownload","JavascriptConflict","navigator","userAgent","WasmDisabledMicrosoftEdge","panic","renderer_debug_info","is_wasm_simd_used","audioState","style","visibility","unmuteAudioContext","blur","On","Off","Hidden","display","unmuteOverlayClicked","once","audioContext","audio_context","onstatechange","state","loadBar","outerLoadbar","Number","isNaN","checkOptions","options","check","condition","JavascriptConfiguration","getExtensionConfig","conflict","isConnected","isFallbackElement","extensionConfig","assign","Transparent","ensureFreshInstance","swfUrl","substring","stream_from","load_data","swfFileName","err","isPlaying","volume","set_volume","fullscreenEnabled","webkitFullscreenEnabled","isFullscreen","fullscreenElement","webkitFullscreenElement","setFullscreen","isFull","enterFullscreen","exitFullscreen","navigationUI","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","webkitExitFullscreen","webkitCancelFullScreen","set_fullscreen","pointerType","base64ToBlob","bytesBase64","mimeString","byteString","atob","ab","ArrayBuffer","ia","charCodeAt","Blob","saveFile","fileName","blob","blobURL","createObjectURL","link","download","click","revokeObjectURL","isB64SOL","solData","slice","confirmReloadSave","solKey","b64SolData","replace","localStorage","confirm","swfPath","pathname","swfHost","hostname","savePath","split","join","startsWith","setItem","removeItem","load","populateSaves","replaceSOL","fileInput","FileReader","result","b64Regex","RegExp","files","readAsDataURL","deleteSave","getItem","saveTable","textContent","solName","pop","row","keyCol","title","downloadCol","downloadSpan","className","replaceCol","replaceInput","accept","replaceLabel","htmlFor","deleteCol","deleteSpan","openSaveManager","showModal","ok","blobUrl","swfDownloadA","pathName","lastIndexOf","input","string","char","eventType","dispatchEvent","KeyboardEvent","bubbles","openVirtualKeyboard","focus","preventScroll","contextMenuItems","CHECKMARK","fromCharCode","items","prepare_context_menu","separatorBefore","text","caption","checked","onClick","run_context_menu_callback","enabled","downloadSwf","isSecureContext","clipboard","writeText","getPanicData","localSaveTable","extensionString","open","preventDefault","hideContextMenu","firstChild","menuSeparator","hr","menuItem","classList","add","left","top","rect","getBoundingClientRect","x","clientX","y","clientY","maxX","clientWidth","maxY","clientHeight","Math","floor","min","clear_custom_menu_items","resume","maxTouchPoints","audio","Audio","arrayBuffer","dataView","DataView","sampleRate","setUint32","setUint16","btoa","then","copyElement","attribute","specified","node","from","static","match","out","onCallbackAvailable","call_exposed_callback","traceObserver","observer","set_trace_observer","dataArray","debugPlayerInfo","platform","entries","hideSplashScreen","errorIndex","Unknown","errorArray","stackIndex","avmStackIndex","stack","avmStack","trim","errorText","buildDate","Date","monthsPrior","setMonth","getMonth","isBuildOutdated","actionTag","errorBody","errorFooter","pageUrl","issueLink","encodeURIComponent","issueBody","SwfFetchError","SwfCors","viewDetails","onclick","panicBody","displayRootMovieDownloadFailedMessage","origin","div","prepend","displayUnsupportedMessage","displayMessage","renderInfo","remove","setMetadata","Loaded","Event","LOADED_METADATA","LOADED_DATA","setIsExtension","isScriptAccessAllowed","access","isBuiltInContextMenuVisible","isYoutubeFlashSource","cleaned_hostname","workaroundYoutubeMixedContent","elem","attr","elem_attr","window_config","isSwfFilename","extension","isSwfMimeType","parentElement","tagName","RuffleEmbed","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","srcval","createAttribute","setNamedItem","removeNamedItem","oldValue","newValue","ruffleObj","findCaseInsensitive","defaultValue","paramsOf","params","param","HTMLParamElement","RuffleObject","isSwf","movie_elem","movie_src","classid","isInterdictable","embedElem","objectElem","globalConfig","jsScriptUrl","objects","iframes","polyfillFlashInstances","ruffleObject","fromNativeObjectElement","replaceWith","ruffleEmbed","fromNativeEmbedElement","polyfillFrames","elements","dataset","elementWindow","contentWindow","errorMessage","injectRuffle","elementDocument","documentElement","major","minor","patch","prIdent","buildIdent","versionString","buildSplit","prSplit","versionSplit","isCompatibleWith","other","hasPrecedenceOver","isNumeric","test","isEqual","isStableOrCompatiblePrerelease","VersionRange","requirements","satisfiedBy","fver","requirement","matches","comparator","version","components","component","exec","fromSemver","SourceAPI","polyfill","isExt","usingExtension","MutationObserver","mutationsList","mutation","addedNodes","observe","childList","subtree","pluginPolyfill","writable","installPlugin","createPlayer","PublicAPI","sources","invoked","newestName","superseded","registerSource","newestSourceName","newestVersion","kVersion","newest","satisfying","ver_requirement","fromRequirementString","valid","localCompatible","local","prevRuffle","sourceName","publicAPI","negotiate"],"sourceRoot":""}